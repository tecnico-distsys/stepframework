                    INFO: WSSERVLET12: JAX-WS context listener initializing
                    [INFO] ContextListener - -Framework initializing...
                    [TRACE] ContextListener - -Initializing extension engine
                    [TRACE] ExtensionEngine - -entering init
                    [DEBUG] ExtensionEngine - -load extension engine configuration from /extensions.properties
                    [TRACE] ExtensionEngine - -entering loadConfig
                    [TRACE] ExtensionEngine - -load extensions properties
                    [TRACE] ExtensionEngine - -/extensions.properties
                    [TRACE] ExtensionEngine - -extensions config properties (key: 'value')
                    [TRACE] ExtensionEngine - -extensions.enabled: 'true'
                    [TRACE] ExtensionEngine - -extensions.intercept.service[]: ''
                    [TRACE] ExtensionEngine - -extensions.intercept.web-service[]: 'xray,exception-thrower,zulu'
                    [TRACE] ExtensionEngine - -extensions.list: 'xray,yankee,exception-thrower,zulu'
                    [DEBUG] ExtensionEngine - -load configuration for each extension
                    [TRACE] Extension - -entering loadConfig
                    [TRACE] Extension - -load xray extension properties from /extension-xray.properties
                    [TRACE] Extension - -extension xray config properties (key: 'value')
                    [TRACE] Extension - -extension.web-service-interceptor: 'extension.hello.HelloWebServiceInterceptor'
                    [TRACE] Extension - -extension.service-interceptor: 'extension.hello.HelloServiceInterceptor'
                    [TRACE] Extension - -greeting: 'Xray'
                    [TRACE] Extension - -extension.listener: 'extension.hello.HelloExtensionListener'
                    [TRACE] Extension - -extension.enabled: 'true'
                    [TRACE] Extension - -remove extension xray properties and keep the remaining ones as additional configuration
                    [TRACE] Extension - -finally exiting loadConfig
                    [TRACE] Extension - -entering loadConfig
                    [TRACE] Extension - -load yankee extension properties from /extension-yankee.properties
                    [TRACE] Extension - -extension yankee config properties (key: 'value')
                    [TRACE] Extension - -extension.web-service-interceptor: 'extension.hello.HelloWebServiceInterceptor'
                    [TRACE] Extension - -extension.service-interceptor: 'extension.hello.HelloServiceInterceptor'
                    [TRACE] Extension - -greeting: 'Yankee'
                    [TRACE] Extension - -extension.listener: 'extension.hello.HelloExtensionListener'
                    [TRACE] Extension - -extension.enabled: 'true'
                    [TRACE] Extension - -remove extension yankee properties and keep the remaining ones as additional configuration
                    [TRACE] Extension - -finally exiting loadConfig
                    [TRACE] Extension - -entering loadConfig
                    [TRACE] Extension - -load exception-thrower extension properties from /extension-exception-thrower.properties
                    [TRACE] Extension - -extension exception-thrower config properties (key: 'value')
                    [TRACE] Extension - -extension.web-service-interceptor: 'extension.exception.ThrowExceptionWebServiceInterceptor'
                    [TRACE] Extension - -extension.enabled: 'true'
                    [TRACE] Extension - -extension.listener: 'extension.exception.ThrowExceptionExtensionListener'
                    [TRACE] Extension - -listener.initialized.throw: ''
                    [TRACE] Extension - -web-service-interceptor.throw: ''
                    [TRACE] Extension - -listener.destroyed.throw: ''
                    [TRACE] Extension - -service-interceptor.before.throw: ''
                    [TRACE] Extension - -service-interceptor.after.throw: ''
                    [TRACE] Extension - -web-service-interceptor.throw.situation: ''
                    [TRACE] Extension - -extension.service-interceptor: 'extension.exception.ThrowExceptionServiceInterceptor'
                    [TRACE] Extension - -remove extension exception-thrower properties and keep the remaining ones as additional configuration
                    [TRACE] Extension - -finally exiting loadConfig
                    [TRACE] Extension - -entering loadConfig
                    [TRACE] Extension - -load zulu extension properties from /extension-zulu.properties
                    [TRACE] Extension - -extension zulu config properties (key: 'value')
                    [TRACE] Extension - -extension.web-service-interceptor: 'extension.hello.HelloWebServiceInterceptor'
                    [TRACE] Extension - -extension.service-interceptor: 'extension.hello.HelloServiceInterceptor'
                    [TRACE] Extension - -greeting: 'Zulu'
                    [TRACE] Extension - -extension.listener: 'extension.hello.HelloExtensionListener'
                    [TRACE] Extension - -extension.enabled: 'true'
                    [TRACE] Extension - -remove extension zulu properties and keep the remaining ones as additional configuration
                    [TRACE] Extension - -finally exiting loadConfig
                    [TRACE] ExtensionEngine - -load intercept configs
                    [TRACE] ExtensionEngine - -ignoring empty extensions.intercept.service[]
                    [TRACE] ExtensionEngine - -Intercept configuration trees:
                    [TRACE] ExtensionEngine - -Configuration tree Service interception
                    root [ConfigNode: config=null, #childNodes=0]

                    [TRACE] ExtensionEngine - -Configuration tree Web Service interception
                    root [ConfigNode: config=[InterceptConfigData: extensionList={[Extension: id=xray, enabled=true], [Extension: id=exception-thrower, enabled=true], [Extension: id=zulu, enabled=true]} ], #childNodes=0]

                    [TRACE] ExtensionEngine - -remove extensions properties and keep the remaining ones as additional configuration
                    [TRACE] ExtensionEngine - -finally exiting loadConfig
                    [DEBUG] ExtensionEngine - -extension engine configuration loaded successfully
                    [DEBUG] ExtensionEngine - -start extensions
                    [TRACE] Extension - -entering start
                    [TRACE] Extension - -load service interceptor class
                    [TRACE] Extension - -create service interceptor instance
                    [TRACE] Extension - -load web service interceptor class
                    [TRACE] Extension - -create web service interceptor instance
                    [TRACE] Extension - -load listener class
                    [TRACE] Extension - -create listener instance
                    [TRACE] Extension - -invoke listener on EXTENSION_INITIALIZED
                    Using custom greeting: Xray
                    Xray from HelloExtensionListener.extensionInitialized
                    [INFO] Extension - -Extension xray enabled
                    [TRACE] Extension - -finally exiting start
                    [TRACE] Extension - -entering start
                    [TRACE] Extension - -load service interceptor class
                    [TRACE] Extension - -create service interceptor instance
                    [TRACE] Extension - -load web service interceptor class
                    [TRACE] Extension - -create web service interceptor instance
                    [TRACE] Extension - -load listener class
                    [TRACE] Extension - -create listener instance
                    [TRACE] Extension - -invoke listener on EXTENSION_INITIALIZED
                    Using custom greeting: Yankee
                    Yankee from HelloExtensionListener.extensionInitialized
                    [INFO] Extension - -Extension yankee enabled
                    [TRACE] Extension - -finally exiting start
                    [TRACE] Extension - -entering start
                    [TRACE] Extension - -load service interceptor class
                    [TRACE] Extension - -create service interceptor instance
                    [TRACE] Extension - -load web service interceptor class
                    [TRACE] Extension - -create web service interceptor instance
                    [TRACE] Extension - -load listener class
                    [TRACE] Extension - -create listener instance
                    [TRACE] Extension - -invoke listener on EXTENSION_INITIALIZED
                    [INFO] Extension - -Extension exception-thrower enabled
                    [TRACE] Extension - -finally exiting start
                    [TRACE] Extension - -entering start
                    [TRACE] Extension - -load service interceptor class
                    [TRACE] Extension - -create service interceptor instance
                    [TRACE] Extension - -load web service interceptor class
                    [TRACE] Extension - -create web service interceptor instance
                    [TRACE] Extension - -load listener class
                    [TRACE] Extension - -create listener instance
                    [TRACE] Extension - -invoke listener on EXTENSION_INITIALIZED
                    Using custom greeting: Zulu
                    Zulu from HelloExtensionListener.extensionInitialized
                    [INFO] Extension - -Extension zulu enabled
                    [TRACE] Extension - -finally exiting start
                    [DEBUG] ExtensionEngine - -extensions started successfully
                    [INFO] ExtensionEngine - -Extension engine enabled
                    [TRACE] ExtensionEngine - -set init flag
                    [TRACE] ExtensionEngine - -finally exiting init
                    [TRACE] ContextListener - -Extensions engine enabled
                    7/Mai/2008 10:39:54 com.sun.xml.ws.transport.http.servlet.WSServletDelegate init
                    INFO: WSSERVLET14: JAX-WS servlet initializing


Running the calc.CalcServiceClient program...
begin
Web Service endpoint URL: http://localhost:8080/CalcWS/endpoint
sum 10 2
Using factory stub creation with custom-URL...
[TRACE] Handler - getHeaders()
Message context: (scope,key,value)
(handler,javax.xml.ws.wsdl.operation,{http://calc}sum)
(handler,javax.xml.ws.service.endpoint.address,http://localhost:8080/CalcWS/endpoint)
(handler,javax.xml.ws.wsdl.service,{http://calc}CalcService)
(handler,javax.xml.ws.wsdl.port,{http://calc}CalcPort)
(handler,com.sun.xml.ws.client.handle,com.sun.xml.ws.client.EndpointIFInvocationHandler@6210fb)
(handler,com.sun.xml.ws.client.ContentNegotiation,none)
(handler,javax.xml.ws.handler.message.outbound,true)
Outbound SOAP message:
<?xml version="1.0" ?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://calc"><soapenv:Body><ns1:sum><ns1:a>10</ns1:a><ns1:b>2</ns1:b></ns1:sum></soapenv:Body></soapenv:Envelope>
[TRACE] Handler - handleMessage()
[TRACE] WebServiceInterceptorManager - interceptHandleMessageWebService()
[TRACE] ExtensionEngine - Attempting automatic extension engine initialization
[TRACE] ExtensionEngine - entering init
[DEBUG] ExtensionEngine - load extension engine configuration from /extensions.properties
[TRACE] ExtensionEngine - entering loadConfig
[TRACE] ExtensionEngine - load extensions properties
[TRACE] ExtensionEngine - /extensions.properties
[TRACE] ExtensionEngine - extensions config properties (key: 'value')
[TRACE] ExtensionEngine - extensions.enabled: 'true'
[TRACE] ExtensionEngine - extensions.intercept.service[]: ''
[TRACE] ExtensionEngine - extensions.intercept.web-service[]: 'alpha,exception-thrower,charlie'
[TRACE] ExtensionEngine - extensions.list: 'alpha,bravo,exception-thrower,charlie'
[DEBUG] ExtensionEngine - load configuration for each extension
[TRACE] Extension - entering loadConfig
[TRACE] Extension - load alpha extension properties from /extension-alpha.properties
[TRACE] Extension - extension alpha config properties (key: 'value')
[TRACE] Extension - extension.web-service-interceptor: 'extension.hello.HelloWebServiceInterceptor'
[TRACE] Extension - extension.service-interceptor: 'extension.hello.HelloServiceInterceptor'
[TRACE] Extension - greeting: 'Alpha'
[TRACE] Extension - extension.listener: 'extension.hello.HelloExtensionListener'
[TRACE] Extension - extension.enabled: 'false'
[TRACE] Extension - remove extension alpha properties and keep the remaining ones as additional configuration
[TRACE] Extension - finally exiting loadConfig
[TRACE] Extension - entering loadConfig
[TRACE] Extension - load bravo extension properties from /extension-bravo.properties
[TRACE] Extension - extension bravo config properties (key: 'value')
[TRACE] Extension - extension.web-service-interceptor: 'extension.hello.HelloWebServiceInterceptor'
[TRACE] Extension - extension.service-interceptor: 'extension.hello.HelloServiceInterceptor'
[TRACE] Extension - greeting: 'Bravo'
[TRACE] Extension - extension.listener: 'extension.hello.HelloExtensionListener'
[TRACE] Extension - extension.enabled: 'false'
[TRACE] Extension - remove extension bravo properties and keep the remaining ones as additional configuration
[TRACE] Extension - finally exiting loadConfig
[TRACE] Extension - entering loadConfig
[TRACE] Extension - load exception-thrower extension properties from /extension-exception-thrower.properties
[TRACE] Extension - extension exception-thrower config properties (key: 'value')
[TRACE] Extension - extension.web-service-interceptor: 'extension.exception.ThrowExceptionWebServiceInterceptor'
[TRACE] Extension - extension.enabled: 'false'
[TRACE] Extension - extension.listener: 'extension.exception.ThrowExceptionExtensionListener'
[TRACE] Extension - listener.initialized.throw: ''
[TRACE] Extension - web-service-interceptor.throw: ''
[TRACE] Extension - listener.destroyed.throw: ''
[TRACE] Extension - service-interceptor.before.throw: ''
[TRACE] Extension - service-interceptor.after.throw: ''
[TRACE] Extension - web-service-interceptor.throw.situation: ''
[TRACE] Extension - extension.service-interceptor: 'extension.exception.ThrowExceptionServiceInterceptor'
[TRACE] Extension - remove extension exception-thrower properties and keep the remaining ones as additional configuration
[TRACE] Extension - finally exiting loadConfig
[TRACE] Extension - entering loadConfig
[TRACE] Extension - load charlie extension properties from /extension-charlie.properties
[TRACE] Extension - extension charlie config properties (key: 'value')
[TRACE] Extension - extension.web-service-interceptor: 'extension.hello.HelloWebServiceInterceptor'
[TRACE] Extension - extension.service-interceptor: 'extension.hello.HelloServiceInterceptor'
[TRACE] Extension - greeting: 'Charlie'
[TRACE] Extension - extension.listener: 'extension.hello.HelloExtensionListener'
[TRACE] Extension - extension.enabled: 'false'
[TRACE] Extension - remove extension charlie properties and keep the remaining ones as additional configuration
[TRACE] Extension - finally exiting loadConfig
[TRACE] ExtensionEngine - load intercept configs
[TRACE] ExtensionEngine - ignoring empty extensions.intercept.service[]
[TRACE] ExtensionEngine - Intercept configuration trees:
[TRACE] ExtensionEngine - Configuration tree Service interception
root [ConfigNode: config=null, #childNodes=0]

[TRACE] ExtensionEngine - Configuration tree Web Service interception
root [ConfigNode: config=[InterceptConfigData: extensionList={[Extension: id=alpha, enabled=false], [Extension: id=exception-thrower, enabled=false], [Extension: id=charlie, enabled=false]} ], #childNodes=0]

[TRACE] ExtensionEngine - remove extensions properties and keep the remaining ones as additional configuration
[TRACE] ExtensionEngine - finally exiting loadConfig
[DEBUG] ExtensionEngine - extension engine configuration loaded successfully
[DEBUG] ExtensionEngine - start extensions
[TRACE] Extension - entering start
[DEBUG] Extension - extension alpha disabled. Skipping further initialization.
[INFO] Extension - Extension alpha disabled
[TRACE] Extension - finally exiting start
[TRACE] Extension - entering start
[DEBUG] Extension - extension bravo disabled. Skipping further initialization.
[INFO] Extension - Extension bravo disabled
[TRACE] Extension - finally exiting start
[TRACE] Extension - entering start
[DEBUG] Extension - extension exception-thrower disabled. Skipping further initialization.
[INFO] Extension - Extension exception-thrower disabled
[TRACE] Extension - finally exiting start
[TRACE] Extension - entering start
[DEBUG] Extension - extension charlie disabled. Skipping further initialization.
[INFO] Extension - Extension charlie disabled
[TRACE] Extension - finally exiting start
[DEBUG] ExtensionEngine - extensions started successfully
[INFO] ExtensionEngine - Extension engine enabled
[TRACE] ExtensionEngine - set init flag
[TRACE] ExtensionEngine - finally exiting init
[TRACE] ExtensionEngine - Automatic extension engine initialization successful!
[TRACE] WebServiceInterceptorManager - SOAP message names follow
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.service: '{http://calc}CalcService'
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
[TRACE] WebServiceInterceptorManager - Web Service config path source items
[TRACE] WebServiceInterceptorManager - namespace: 'http://calc'
[TRACE] WebServiceInterceptorManager - service: 'CalcService'
[TRACE] WebServiceInterceptorManager - port: 'CalcPort'
[TRACE] WebServiceInterceptorManager - Extracted config path: '{http://calc}CalcService.CalcPort'
[TRACE] WebServiceInterceptorManager - Using configuration tree: Web Service interception
[TRACE] WebServiceInterceptorManager - Web Service interception config data: [InterceptConfigData: extensionList={[Extension: id=alpha, enabled=false], [Extension: id=exception-thrower, enabled=false], [Extension: id=charlie, enabled=false]} ]
[TRACE] WebServiceInterceptorManager - SOAP message names follow
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.service: '{http://calc}CalcService'
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
[TRACE] WebServiceInterceptorManager - Web Service config path source items
[TRACE] WebServiceInterceptorManager - namespace: 'http://calc'
[TRACE] WebServiceInterceptorManager - service: 'CalcService'
[TRACE] WebServiceInterceptorManager - port: 'CalcPort'
[DEBUG] WebServiceInterceptorManager - Intercepting web service {http://calc}CalcService.CalcPort
[DEBUG] WebServiceInterceptorManager - SOAP Message situation: client-side, outbound, non-fault
[DEBUG] WebServiceInterceptorManager - Skipping alpha extension because it's disabled
[DEBUG] WebServiceInterceptorManager - Skipping exception-thrower extension because it's disabled
[DEBUG] WebServiceInterceptorManager - Skipping charlie extension because it's disabled
[TRACE] WebServiceInterceptorManager - finally exiting interceptHandleMessageWebService()
Outbound SOAP message:
<?xml version="1.0" ?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://calc" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soapenv:Body><ns1:sum><ns1:a>10</ns1:a><ns1:b>2</ns1:b></ns1:sum></soapenv:Body></soapenv:Envelope>
Message context: (scope,key,value)
(handler,javax.xml.ws.wsdl.operation,{http://calc}sum)
(handler,javax.xml.ws.service.endpoint.address,http://localhost:8080/CalcWS/endpoint)
(handler,javax.xml.ws.wsdl.service,{http://calc}CalcService)
(handler,javax.xml.ws.wsdl.port,{http://calc}CalcPort)
(handler,com.sun.xml.ws.client.handle,com.sun.xml.ws.client.EndpointIFInvocationHandler@6210fb)
(handler,com.sun.xml.ws.client.ContentNegotiation,none)
(handler,javax.xml.ws.handler.message.outbound,true)
Message context: (scope,key,value)
(handler,javax.xml.ws.wsdl.operation,{http://calc}sum)
(application,javax.xml.ws.binding.attachments.inbound,{})
(handler,javax.xml.ws.service.endpoint.address,http://localhost:8080/CalcWS/endpoint)
(handler,javax.xml.ws.wsdl.service,{http://calc}CalcService)
(application,javax.xml.ws.http.response.code,200)
(handler,javax.xml.ws.wsdl.port,{http://calc}CalcPort)
(handler,com.sun.xml.ws.client.handle,com.sun.xml.ws.client.EndpointIFInvocationHandler@6210fb)
(application,javax.xml.ws.http.response.headers,{Content-Length=[277], Set-Cookie=[JSESSIONID=86F5F88784E3AC865C6EBBE23A2D70FE; Path=/CalcWS], SOAPAction=[""], Date=[Wed, 07 May 2008 09:40:18 GMT], Content-Type=[text/xml;charset=utf-8], Server=[Sun-Java-System/Web-Services-Pack-1.4], null=[HTTP/1.1 200 OK]})
(handler,com.sun.xml.ws.client.ContentNegotiation,none)
(handler,javax.xml.ws.handler.message.outbound,false)


                    [TRACE] Handler - -getHeaders()
                    Message context: (scope,key,value)
                    (application,javax.xml.ws.binding.attachments.inbound,{})
                    (application,javax.xml.ws.wsdl.service,{http://calc}CalcService)
                    (application,javax.xml.ws.servlet.request,org.apache.coyote.tomcat5.CoyoteRequestFacade@bc6007)
                    (application,javax.xml.ws.servlet.context,org.apache.catalina.core.ApplicationContextFacade@144752d)
                    (application,javax.xml.ws.wsdl.port,{http://calc}CalcPort)
                    (application,javax.xml.ws.http.request.headers,com.sun.xml.ws.transport.Headers@29e4947f)
                    (application,javax.xml.ws.servlet.response,org.apache.coyote.tomcat5.CoyoteResponseFacade@168e429)
                    (application,com.sun.xml.ws.common.MtomThresholdValue,null)
                    (application,javax.xml.ws.servlet.session,org.apache.catalina.session.StandardSessionFacade@15b4492)
                    (handler,javax.xml.ws.handler.message.outbound,false)
                    (application,javax.xml.ws.http.request.method,POST)
                    Inbound SOAP message:
                    <?xml version="1.0" ?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://calc" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soapenv:Body><ns1:sum><ns1:a>10</ns1:a><ns1:b>2</ns1:b></ns1:sum></soapenv:Body></soapenv:Envelope>
                    [TRACE] Handler - -handleMessage()
                    [TRACE] WebServiceInterceptorManager - -interceptHandleMessageWebService()
                    [TRACE] WebServiceInterceptorManager - -SOAP message names follow
                    [TRACE] WebServiceInterceptorManager - -javax.xml.ws.wsdl.service: '{http://calc}CalcService'
                    [TRACE] WebServiceInterceptorManager - -javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
                    [TRACE] WebServiceInterceptorManager - -Web Service config path source items
                    [TRACE] WebServiceInterceptorManager - -namespace: 'http://calc'
                    [TRACE] WebServiceInterceptorManager - -service: 'CalcService'
                    [TRACE] WebServiceInterceptorManager - -port: 'CalcPort'
                    [TRACE] WebServiceInterceptorManager - -Extracted config path: '{http://calc}CalcService.CalcPort'
                    [TRACE] WebServiceInterceptorManager - -Using configuration tree: Web Service interception
                    [TRACE] WebServiceInterceptorManager - -Web Service interception config data: [InterceptConfigData: extensionList={[Extension: id=xray, enabled=true, listener=extension.hello.HelloExtensionListener, service-interceptor=extension.hello.HelloServiceInterceptor, web-service-interceptor=extension.hello.HelloWebServiceInterceptor], [Extension: id=exception-thrower, enabled=true, listener=extension.exception.ThrowExceptionExtensionListener, service-interceptor=extension.exception.ThrowExceptionServiceInterceptor, web-service-interceptor=extension.exception.ThrowExceptionWebServiceInterceptor], [Extension: id=zulu, enabled=true, listener=extension.hello.HelloExtensionListener, service-interceptor=extension.hello.HelloServiceInterceptor, web-service-interceptor=extension.hello.HelloWebServiceInterceptor]} ]
                    [TRACE] WebServiceInterceptorManager - -SOAP message names follow
                    [TRACE] WebServiceInterceptorManager - -javax.xml.ws.wsdl.service: '{http://calc}CalcService'
                    [TRACE] WebServiceInterceptorManager - -javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
                    [TRACE] WebServiceInterceptorManager - -Web Service config path source items
                    [TRACE] WebServiceInterceptorManager - -namespace: 'http://calc'
                    [TRACE] WebServiceInterceptorManager - -service: 'CalcService'
                    [TRACE] WebServiceInterceptorManager - -port: 'CalcPort'
                    [DEBUG] WebServiceInterceptorManager - -Intercepting web service {http://calc}CalcService.CalcPort
                    [DEBUG] WebServiceInterceptorManager - -SOAP Message situation: server-side, inbound, non-fault
                    [DEBUG] WebServiceInterceptorManager - -Invoking zulu extension
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor instance
                    [TRACE] Extension - -create web service interceptor instance
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor parameter instance
                    [TRACE] WebServiceInterceptorManager - -call web service interceptor
                    Zulu from HelloWebServiceInterceptor.interceptMessage SOAP message situation: server-side, inbound
                    [TRACE] WebServiceInterceptorManager - -interceptor return value: 'true'
                    [DEBUG] WebServiceInterceptorManager - -Invoking exception-thrower extension
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor instance
                    [TRACE] Extension - -create web service interceptor instance
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor parameter instance
                    [TRACE] WebServiceInterceptorManager - -call web service interceptor
                    no web service interceptor throw specified (property web-service-interceptor.throw); skipping
                    [TRACE] WebServiceInterceptorManager - -interceptor return value: 'true'
                    [DEBUG] WebServiceInterceptorManager - -Invoking xray extension
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor instance
                    [TRACE] Extension - -create web service interceptor instance
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor parameter instance
                    [TRACE] WebServiceInterceptorManager - -call web service interceptor
                    Xray from HelloWebServiceInterceptor.interceptMessage SOAP message situation: server-side, inbound
                    [TRACE] WebServiceInterceptorManager - -interceptor return value: 'true'
                    [TRACE] WebServiceInterceptorManager - -finally exiting interceptHandleMessageWebService()
                    Inbound SOAP message:
                    <?xml version="1.0" ?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://calc" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soapenv:Body><ns1:sum><ns1:a>10</ns1:a><ns1:b>2</ns1:b></ns1:sum></soapenv:Body></soapenv:Envelope>
                    Message context: (scope,key,value)
                    (application,javax.xml.ws.binding.attachments.inbound,{})
                    (application,javax.xml.ws.wsdl.service,{http://calc}CalcService)
                    (application,javax.xml.ws.servlet.request,org.apache.coyote.tomcat5.CoyoteRequestFacade@bc6007)
                    (application,javax.xml.ws.servlet.context,org.apache.catalina.core.ApplicationContextFacade@144752d)
                    (application,javax.xml.ws.wsdl.port,{http://calc}CalcPort)
                    (application,javax.xml.ws.http.request.headers,com.sun.xml.ws.transport.Headers@29e4947f)
                    (application,javax.xml.ws.servlet.response,org.apache.coyote.tomcat5.CoyoteResponseFacade@168e429)
                    (application,com.sun.xml.ws.common.MtomThresholdValue,null)
                    (application,javax.xml.ws.servlet.session,org.apache.catalina.session.StandardSessionFacade@15b4492)
                    (handler,javax.xml.ws.handler.message.outbound,false)
                    (application,javax.xml.ws.http.request.method,POST)
                    sum 10 2
                    Message context: (scope,key,value)
                    (application,javax.xml.ws.wsdl.operation,{http://calc}sum)
                    (application,javax.xml.ws.binding.attachments.inbound,{})
                    (application,javax.xml.ws.servlet.context,org.apache.catalina.core.ApplicationContextFacade@144752d)
                    (application,javax.xml.ws.servlet.session,org.apache.catalina.session.StandardSessionFacade@15b4492)
                    (application,javax.xml.ws.wsdl.service,{http://calc}CalcService)
                    (application,javax.xml.ws.servlet.request,org.apache.coyote.tomcat5.CoyoteRequestFacade@bc6007)
                    (application,javax.xml.ws.wsdl.port,{http://calc}CalcPort)
                    (application,javax.xml.ws.servlet.response,org.apache.coyote.tomcat5.CoyoteResponseFacade@168e429)
                    (application,javax.xml.ws.http.request.headers,com.sun.xml.ws.transport.Headers@29e4947f)
                    (application,com.sun.xml.ws.common.MtomThresholdValue,null)
                    (application,javax.xml.ws.http.request.method,POST)
                    (handler,javax.xml.ws.handler.message.outbound,true)
                    (application,com.sun.xml.ws.client.ContentNegotiation,null)
                    Outbound SOAP message:
                    <?xml version="1.0" ?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://calc"><soapenv:Body><ns1:sumResponse><ns1:return>12</ns1:return></ns1:sumResponse></soapenv:Body></soapenv:Envelope>
                    [TRACE] Handler - -handleMessage()
                    [TRACE] WebServiceInterceptorManager - -interceptHandleMessageWebService()
                    [TRACE] WebServiceInterceptorManager - -SOAP message names follow
                    [TRACE] WebServiceInterceptorManager - -javax.xml.ws.wsdl.service: '{http://calc}CalcService'
                    [TRACE] WebServiceInterceptorManager - -javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
                    [TRACE] WebServiceInterceptorManager - -Web Service config path source items
                    [TRACE] WebServiceInterceptorManager - -namespace: 'http://calc'
                    [TRACE] WebServiceInterceptorManager - -service: 'CalcService'
                    [TRACE] WebServiceInterceptorManager - -port: 'CalcPort'
                    [TRACE] WebServiceInterceptorManager - -Extracted config path: '{http://calc}CalcService.CalcPort'
                    [TRACE] WebServiceInterceptorManager - -Using configuration tree: Web Service interception
                    [TRACE] WebServiceInterceptorManager - -Web Service interception config data: [InterceptConfigData: extensionList={[Extension: id=xray, enabled=true, listener=extension.hello.HelloExtensionListener, service-interceptor=extension.hello.HelloServiceInterceptor, web-service-interceptor=extension.hello.HelloWebServiceInterceptor], [Extension: id=exception-thrower, enabled=true, listener=extension.exception.ThrowExceptionExtensionListener, service-interceptor=extension.exception.ThrowExceptionServiceInterceptor, web-service-interceptor=extension.exception.ThrowExceptionWebServiceInterceptor], [Extension: id=zulu, enabled=true, listener=extension.hello.HelloExtensionListener, service-interceptor=extension.hello.HelloServiceInterceptor, web-service-interceptor=extension.hello.HelloWebServiceInterceptor]} ]
                    [TRACE] WebServiceInterceptorManager - -SOAP message names follow
                    [TRACE] WebServiceInterceptorManager - -javax.xml.ws.wsdl.service: '{http://calc}CalcService'
                    [TRACE] WebServiceInterceptorManager - -javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
                    [TRACE] WebServiceInterceptorManager - -Web Service config path source items
                    [TRACE] WebServiceInterceptorManager - -namespace: 'http://calc'
                    [TRACE] WebServiceInterceptorManager - -service: 'CalcService'
                    [TRACE] WebServiceInterceptorManager - -port: 'CalcPort'
                    [DEBUG] WebServiceInterceptorManager - -Intercepting web service {http://calc}CalcService.CalcPort
                    [DEBUG] WebServiceInterceptorManager - -SOAP Message situation: server-side, outbound, non-fault
                    [DEBUG] WebServiceInterceptorManager - -Invoking xray extension
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor instance
                    [TRACE] Extension - -create web service interceptor instance
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor parameter instance
                    [TRACE] WebServiceInterceptorManager - -call web service interceptor
                    Xray from HelloWebServiceInterceptor.interceptMessage SOAP message situation: server-side, outbound
                    [TRACE] WebServiceInterceptorManager - -interceptor return value: 'true'
                    [DEBUG] WebServiceInterceptorManager - -Invoking exception-thrower extension
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor instance
                    [TRACE] Extension - -create web service interceptor instance
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor parameter instance
                    [TRACE] WebServiceInterceptorManager - -call web service interceptor
                    no web service interceptor throw specified (property web-service-interceptor.throw); skipping
                    [TRACE] WebServiceInterceptorManager - -interceptor return value: 'true'
                    [DEBUG] WebServiceInterceptorManager - -Invoking zulu extension
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor instance
                    [TRACE] Extension - -create web service interceptor instance
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor parameter instance
                    [TRACE] WebServiceInterceptorManager - -call web service interceptor
                    Zulu from HelloWebServiceInterceptor.interceptMessage SOAP message situation: server-side, outbound
                    [TRACE] WebServiceInterceptorManager - -interceptor return value: 'true'
                    [TRACE] WebServiceInterceptorManager - -finally exiting interceptHandleMessageWebService()
                    Outbound SOAP message:
                    <?xml version="1.0" ?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://calc" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soapenv:Body><ns1:sumResponse><ns1:return>12</ns1:return></ns1:sumResponse></soapenv:Body></soapenv:Envelope>
                    Message context: (scope,key,value)
                    (application,javax.xml.ws.wsdl.operation,{http://calc}sum)
                    (application,javax.xml.ws.binding.attachments.inbound,{})
                    (application,javax.xml.ws.servlet.context,org.apache.catalina.core.ApplicationContextFacade@144752d)
                    (application,javax.xml.ws.servlet.session,org.apache.catalina.session.StandardSessionFacade@15b4492)
                    (application,javax.xml.ws.wsdl.service,{http://calc}CalcService)
                    (application,javax.xml.ws.servlet.request,org.apache.coyote.tomcat5.CoyoteRequestFacade@bc6007)
                    (application,javax.xml.ws.wsdl.port,{http://calc}CalcPort)
                    (application,javax.xml.ws.servlet.response,org.apache.coyote.tomcat5.CoyoteResponseFacade@168e429)
                    (application,javax.xml.ws.http.request.headers,com.sun.xml.ws.transport.Headers@29e4947f)
                    (application,com.sun.xml.ws.common.MtomThresholdValue,null)
                    (application,javax.xml.ws.http.request.method,POST)
                    (handler,javax.xml.ws.handler.message.outbound,true)
                    (application,com.sun.xml.ws.client.ContentNegotiation,null)
                    [TRACE] Handler - -close()
                    [TRACE] WebServiceInterceptorManager - -interceptCloseWebServiceHandler()
                    [TRACE] WebServiceInterceptorManager - -finally exiting interceptCloseWebServiceHandler()


Inbound SOAP message:
<?xml version="1.0" ?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://calc" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soapenv:Body><ns1:sumResponse><ns1:return>12</ns1:return></ns1:sumResponse></soapenv:Body></soapenv:Envelope>
[TRACE] Handler - handleMessage()
[TRACE] WebServiceInterceptorManager - interceptHandleMessageWebService()
[TRACE] WebServiceInterceptorManager - SOAP message names follow
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.service: '{http://calc}CalcService'
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
[TRACE] WebServiceInterceptorManager - Web Service config path source items
[TRACE] WebServiceInterceptorManager - namespace: 'http://calc'
[TRACE] WebServiceInterceptorManager - service: 'CalcService'
[TRACE] WebServiceInterceptorManager - port: 'CalcPort'
[TRACE] WebServiceInterceptorManager - Extracted config path: '{http://calc}CalcService.CalcPort'
[TRACE] WebServiceInterceptorManager - Using configuration tree: Web Service interception
[TRACE] WebServiceInterceptorManager - Web Service interception config data: [InterceptConfigData: extensionList={[Extension: id=alpha, enabled=false], [Extension: id=exception-thrower, enabled=false], [Extension: id=charlie, enabled=false]} ]
[TRACE] WebServiceInterceptorManager - SOAP message names follow
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.service: '{http://calc}CalcService'
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
[TRACE] WebServiceInterceptorManager - Web Service config path source items
[TRACE] WebServiceInterceptorManager - namespace: 'http://calc'
[TRACE] WebServiceInterceptorManager - service: 'CalcService'
[TRACE] WebServiceInterceptorManager - port: 'CalcPort'
[DEBUG] WebServiceInterceptorManager - Intercepting web service {http://calc}CalcService.CalcPort
[DEBUG] WebServiceInterceptorManager - SOAP Message situation: client-side, inbound, non-fault
[DEBUG] WebServiceInterceptorManager - Skipping charlie extension because it's disabled
[DEBUG] WebServiceInterceptorManager - Skipping exception-thrower extension because it's disabled
[DEBUG] WebServiceInterceptorManager - Skipping alpha extension because it's disabled
[TRACE] WebServiceInterceptorManager - finally exiting interceptHandleMessageWebService()
Inbound SOAP message:
<?xml version="1.0" ?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://calc" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soapenv:Body><ns1:sumResponse><ns1:return>12</ns1:return></ns1:sumResponse></soapenv:Body></soapenv:Envelope>
Message context: (scope,key,value)
(handler,javax.xml.ws.wsdl.operation,{http://calc}sum)
(application,javax.xml.ws.binding.attachments.inbound,{})
(handler,javax.xml.ws.service.endpoint.address,http://localhost:8080/CalcWS/endpoint)
(handler,javax.xml.ws.wsdl.service,{http://calc}CalcService)
(application,javax.xml.ws.http.response.code,200)
(handler,javax.xml.ws.wsdl.port,{http://calc}CalcPort)
(handler,com.sun.xml.ws.client.handle,com.sun.xml.ws.client.EndpointIFInvocationHandler@6210fb)
(application,javax.xml.ws.http.response.headers,{Content-Length=[277], Set-Cookie=[JSESSIONID=86F5F88784E3AC865C6EBBE23A2D70FE; Path=/CalcWS], SOAPAction=[""], Date=[Wed, 07 May 2008 09:40:18 GMT], Content-Type=[text/xml;charset=utf-8], Server=[Sun-Java-System/Web-Services-Pack-1.4], null=[HTTP/1.1 200 OK]})
(handler,com.sun.xml.ws.client.ContentNegotiation,none)
(handler,javax.xml.ws.handler.message.outbound,false)
[TRACE] Handler - close()
[TRACE] WebServiceInterceptorManager - interceptCloseWebServiceHandler()
[TRACE] WebServiceInterceptorManager - finally exiting interceptCloseWebServiceHandler()
= 12
end

run:

BUILD SUCCESSFUL
Total time: 9 seconds
