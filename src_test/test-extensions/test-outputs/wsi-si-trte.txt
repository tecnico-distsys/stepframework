                    (...)

Running the calc.CalcServiceClient program...
begin
Web Service endpoint URL: http://localhost:8080/CalcWS/endpoint
sum 10 2
Using factory stub creation with custom-URL...
[TRACE] Handler - getHeaders()
Message context: (scope,key,value)
(handler,javax.xml.ws.wsdl.operation,{http://calc}sum)
(handler,javax.xml.ws.service.endpoint.address,http://localhost:8080/CalcWS/endpoint)
(handler,javax.xml.ws.wsdl.service,{http://calc}CalcService)
(handler,javax.xml.ws.wsdl.port,{http://calc}CalcPort)
(handler,com.sun.xml.ws.client.handle,com.sun.xml.ws.client.EndpointIFInvocationHandler@6210fb)
(handler,com.sun.xml.ws.client.ContentNegotiation,none)
(handler,javax.xml.ws.handler.message.outbound,true)
Outbound SOAP message:
<?xml version="1.0" ?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://calc"><soapenv:Body><ns1:sum><ns1:a>10</ns1:a><ns1:b>2</ns1:b></ns1:sum></soapenv:Body></soapenv:Envelope>
[TRACE] Handler - handleMessage()
[TRACE] WebServiceInterceptorManager - interceptHandleMessageWebService()
[TRACE] ExtensionEngine - Attempting automatic extension engine initialization
[TRACE] ExtensionEngine - entering init
[DEBUG] ExtensionEngine - load extension engine configuration from /extensions.properties
[TRACE] ExtensionEngine - entering loadConfig
[TRACE] ExtensionEngine - load extensions properties
[TRACE] ExtensionEngine - /extensions.properties
[TRACE] ExtensionEngine - extensions config properties (key: 'value')
[TRACE] ExtensionEngine - extensions.enabled: 'true'
[TRACE] ExtensionEngine - extensions.intercept.service[]: ''
[TRACE] ExtensionEngine - extensions.intercept.web-service[]: 'alpha,exception-thrower,charlie'
[TRACE] ExtensionEngine - extensions.list: 'alpha,bravo,exception-thrower,charlie'
[DEBUG] ExtensionEngine - load configuration for each extension
[TRACE] Extension - entering loadConfig
[TRACE] Extension - load alpha extension properties from /extension-alpha.properties
[TRACE] Extension - extension alpha config properties (key: 'value')
[TRACE] Extension - extension.web-service-interceptor: 'extension.hello.HelloWebServiceInterceptor'
[TRACE] Extension - extension.service-interceptor: 'extension.hello.HelloServiceInterceptor'
[TRACE] Extension - greeting: 'Alpha'
[TRACE] Extension - extension.listener: 'extension.hello.HelloExtensionListener'
[TRACE] Extension - extension.enabled: 'false'
[TRACE] Extension - remove extension alpha properties and keep the remaining ones as additional configuration
[TRACE] Extension - finally exiting loadConfig
[TRACE] Extension - entering loadConfig
[TRACE] Extension - load bravo extension properties from /extension-bravo.properties
[TRACE] Extension - extension bravo config properties (key: 'value')
[TRACE] Extension - extension.web-service-interceptor: 'extension.hello.HelloWebServiceInterceptor'
[TRACE] Extension - extension.service-interceptor: 'extension.hello.HelloServiceInterceptor'
[TRACE] Extension - greeting: 'Bravo'
[TRACE] Extension - extension.listener: 'extension.hello.HelloExtensionListener'
[TRACE] Extension - extension.enabled: 'false'
[TRACE] Extension - remove extension bravo properties and keep the remaining ones as additional configuration
[TRACE] Extension - finally exiting loadConfig
[TRACE] Extension - entering loadConfig
[TRACE] Extension - load exception-thrower extension properties from /extension-exception-thrower.properties
[TRACE] Extension - extension exception-thrower config properties (key: 'value')
[TRACE] Extension - extension.web-service-interceptor: 'extension.exception.ThrowExceptionWebServiceInterceptor'
[TRACE] Extension - extension.enabled: 'false'
[TRACE] Extension - extension.listener: 'extension.exception.ThrowExceptionExtensionListener'
[TRACE] Extension - listener.initialized.throw: ''
[TRACE] Extension - web-service-interceptor.throw: ''
[TRACE] Extension - listener.destroyed.throw: ''
[TRACE] Extension - service-interceptor.before.throw: ''
[TRACE] Extension - service-interceptor.after.throw: ''
[TRACE] Extension - web-service-interceptor.throw.situation: ''
[TRACE] Extension - extension.service-interceptor: 'extension.exception.ThrowExceptionServiceInterceptor'
[TRACE] Extension - remove extension exception-thrower properties and keep the remaining ones as additional configuration
[TRACE] Extension - finally exiting loadConfig
[TRACE] Extension - entering loadConfig
[TRACE] Extension - load charlie extension properties from /extension-charlie.properties
[TRACE] Extension - extension charlie config properties (key: 'value')
[TRACE] Extension - extension.web-service-interceptor: 'extension.hello.HelloWebServiceInterceptor'
[TRACE] Extension - extension.service-interceptor: 'extension.hello.HelloServiceInterceptor'
[TRACE] Extension - greeting: 'Charlie'
[TRACE] Extension - extension.listener: 'extension.hello.HelloExtensionListener'
[TRACE] Extension - extension.enabled: 'false'
[TRACE] Extension - remove extension charlie properties and keep the remaining ones as additional configuration
[TRACE] Extension - finally exiting loadConfig
[TRACE] ExtensionEngine - load intercept configs
[TRACE] ExtensionEngine - ignoring empty extensions.intercept.service[]
[TRACE] ExtensionEngine - Intercept configuration trees:
[TRACE] ExtensionEngine - Configuration tree Service interception
root [ConfigNode: config=null, #childNodes=0]

[TRACE] ExtensionEngine - Configuration tree Web Service interception
root [ConfigNode: config=[InterceptConfigData: extensionList={[Extension: id=alpha, enabled=false], [Extension: id=exception-thrower, enabled=false], [Extension: id=charlie, enabled=false]} ], #childNodes=0]

[TRACE] ExtensionEngine - remove extensions properties and keep the remaining ones as additional configuration
[TRACE] ExtensionEngine - finally exiting loadConfig
[DEBUG] ExtensionEngine - extension engine configuration loaded successfully
[DEBUG] ExtensionEngine - start extensions
[TRACE] Extension - entering start
[DEBUG] Extension - extension alpha disabled. Skipping further initialization.
[INFO] Extension - Extension alpha disabled
[TRACE] Extension - finally exiting start
[TRACE] Extension - entering start
[DEBUG] Extension - extension bravo disabled. Skipping further initialization.
[INFO] Extension - Extension bravo disabled
[TRACE] Extension - finally exiting start
[TRACE] Extension - entering start
[DEBUG] Extension - extension exception-thrower disabled. Skipping further initialization.
[INFO] Extension - Extension exception-thrower disabled
[TRACE] Extension - finally exiting start
[TRACE] Extension - entering start
[DEBUG] Extension - extension charlie disabled. Skipping further initialization.
[INFO] Extension - Extension charlie disabled
[TRACE] Extension - finally exiting start
[DEBUG] ExtensionEngine - extensions started successfully
[INFO] ExtensionEngine - Extension engine enabled
[TRACE] ExtensionEngine - set init flag
[TRACE] ExtensionEngine - finally exiting init
[TRACE] ExtensionEngine - Automatic extension engine initialization successful!
[TRACE] WebServiceInterceptorManager - SOAP message names follow
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.service: '{http://calc}CalcService'
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
[TRACE] WebServiceInterceptorManager - Web Service config path source items
[TRACE] WebServiceInterceptorManager - namespace: 'http://calc'
[TRACE] WebServiceInterceptorManager - service: 'CalcService'
[TRACE] WebServiceInterceptorManager - port: 'CalcPort'
[TRACE] WebServiceInterceptorManager - Extracted config path: '{http://calc}CalcService.CalcPort'
[TRACE] WebServiceInterceptorManager - Using configuration tree: Web Service interception
[TRACE] WebServiceInterceptorManager - Web Service interception config data: [InterceptConfigData: extensionList={[Extension: id=alpha, enabled=false], [Extension: id=exception-thrower, enabled=false], [Extension: id=charlie, enabled=false]} ]
[TRACE] WebServiceInterceptorManager - SOAP message names follow
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.service: '{http://calc}CalcService'
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
[TRACE] WebServiceInterceptorManager - Web Service config path source items
[TRACE] WebServiceInterceptorManager - namespace: 'http://calc'
[TRACE] WebServiceInterceptorManager - service: 'CalcService'
[TRACE] WebServiceInterceptorManager - port: 'CalcPort'
[DEBUG] WebServiceInterceptorManager - Intercepting web service {http://calc}CalcService.CalcPort
[DEBUG] WebServiceInterceptorManager - SOAP Message situation: client-side, outbound, non-fault
[DEBUG] WebServiceInterceptorManager - Skipping alpha extension because it's disabled
[DEBUG] WebServiceInterceptorManager - Skipping exception-thrower extension because it's disabled
[DEBUG] WebServiceInterceptorManager - Skipping charlie extension because it's disabled
[TRACE] WebServiceInterceptorManager - finally exiting interceptHandleMessageWebService()
Outbound SOAP message:
<?xml version="1.0" ?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://calc" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soapenv:Body><ns1:sum><ns1:a>10</ns1:a><ns1:b>2</ns1:b></ns1:sum></soapenv:Body></soapenv:Envelope>
Message context: (scope,key,value)
(handler,javax.xml.ws.wsdl.operation,{http://calc}sum)
(handler,javax.xml.ws.service.endpoint.address,http://localhost:8080/CalcWS/endpoint)
(handler,javax.xml.ws.wsdl.service,{http://calc}CalcService)
(handler,javax.xml.ws.wsdl.port,{http://calc}CalcPort)
(handler,com.sun.xml.ws.client.handle,com.sun.xml.ws.client.EndpointIFInvocationHandler@6210fb)
(handler,com.sun.xml.ws.client.ContentNegotiation,none)
(handler,javax.xml.ws.handler.message.outbound,true)


                    [TRACE] Handler - -getHeaders()
                    Message context: (scope,key,value)
                    (application,javax.xml.ws.binding.attachments.inbound,{})
                    (application,javax.xml.ws.wsdl.service,{http://calc}CalcService)
                    (application,javax.xml.ws.servlet.request,org.apache.coyote.tomcat5.CoyoteRequestFacade@bc6007)
                    (application,javax.xml.ws.servlet.context,org.apache.catalina.core.ApplicationContextFacade@1a271f5)
                    (application,javax.xml.ws.wsdl.port,{http://calc}CalcPort)
                    (application,javax.xml.ws.http.request.headers,com.sun.xml.ws.transport.Headers@29e4947f)
                    (application,javax.xml.ws.servlet.response,org.apache.coyote.tomcat5.CoyoteResponseFacade@168e429)
                    (application,com.sun.xml.ws.common.MtomThresholdValue,null)
                    (application,javax.xml.ws.servlet.session,org.apache.catalina.session.StandardSessionFacade@1e7a755)
                    (handler,javax.xml.ws.handler.message.outbound,false)
                    (application,javax.xml.ws.http.request.method,POST)
                    Inbound SOAP message:
                    <?xml version="1.0" ?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://calc" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soapenv:Body><ns1:sum><ns1:a>10</ns1:a><ns1:b>2</ns1:b></ns1:sum></soapenv:Body></soapenv:Envelope>
                    [TRACE] Handler - -handleMessage()
                    [TRACE] WebServiceInterceptorManager - -interceptHandleMessageWebService()
                    [TRACE] WebServiceInterceptorManager - -SOAP message names follow
                    [TRACE] WebServiceInterceptorManager - -javax.xml.ws.wsdl.service: '{http://calc}CalcService'
                    [TRACE] WebServiceInterceptorManager - -javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
                    [TRACE] WebServiceInterceptorManager - -Web Service config path source items
                    [TRACE] WebServiceInterceptorManager - -namespace: 'http://calc'
                    [TRACE] WebServiceInterceptorManager - -service: 'CalcService'
                    [TRACE] WebServiceInterceptorManager - -port: 'CalcPort'
                    [TRACE] WebServiceInterceptorManager - -Extracted config path: '{http://calc}CalcService.CalcPort'
                    [TRACE] WebServiceInterceptorManager - -Using configuration tree: Web Service interception
                    [TRACE] WebServiceInterceptorManager - -Web Service interception config data: [InterceptConfigData: extensionList={[Extension: id=xray, enabled=true, listener=extension.hello.HelloExtensionListener, service-interceptor=extension.hello.HelloServiceInterceptor, web-service-interceptor=extension.hello.HelloWebServiceInterceptor], [Extension: id=exception-thrower, enabled=true, listener=extension.exception.ThrowExceptionExtensionListener, service-interceptor=extension.exception.ThrowExceptionServiceInterceptor, web-service-interceptor=extension.exception.ThrowExceptionWebServiceInterceptor], [Extension: id=zulu, enabled=true, listener=extension.hello.HelloExtensionListener, service-interceptor=extension.hello.HelloServiceInterceptor, web-service-interceptor=extension.hello.HelloWebServiceInterceptor]} ]
                    [TRACE] WebServiceInterceptorManager - -SOAP message names follow
                    [TRACE] WebServiceInterceptorManager - -javax.xml.ws.wsdl.service: '{http://calc}CalcService'
                    [TRACE] WebServiceInterceptorManager - -javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
                    [TRACE] WebServiceInterceptorManager - -Web Service config path source items
                    [TRACE] WebServiceInterceptorManager - -namespace: 'http://calc'
                    [TRACE] WebServiceInterceptorManager - -service: 'CalcService'
                    [TRACE] WebServiceInterceptorManager - -port: 'CalcPort'
                    [DEBUG] WebServiceInterceptorManager - -Intercepting web service {http://calc}CalcService.CalcPort
                    [DEBUG] WebServiceInterceptorManager - -SOAP Message situation: server-side, inbound, non-fault
                    [DEBUG] WebServiceInterceptorManager - -Invoking zulu extension
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor instance
                    [TRACE] Extension - -create web service interceptor instance
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor parameter instance
                    [TRACE] WebServiceInterceptorManager - -call web service interceptor
                    Zulu from HelloWebServiceInterceptor.interceptMessage SOAP message situation: server-side, inbound
                    [TRACE] WebServiceInterceptorManager - -interceptor return value: 'true'
                    [DEBUG] WebServiceInterceptorManager - -Invoking exception-thrower extension
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor instance
                    [TRACE] Extension - -create web service interceptor instance
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor parameter instance
                    [TRACE] WebServiceInterceptorManager - -call web service interceptor
                    ThrowExceptionExtensionUtil> throwing an instance of java.lang.NullPointerException in method server-inbound
                    [DEBUG] WebServiceInterceptorManager - -web service interceptor has thrown a run-time exception
                    [DEBUG] WebServiceInterceptorManager - -java.lang.NullPointerException: ThrowExceptionExtensionUtil generated exception in method server-inbound
                    [TRACE] WebServiceInterceptorManager - -run-time exception details <java.lang.NullPointerException: ThrowExceptionExtensionUtil generated exception in method server-inbound>java.lang.NullPointerException: ThrowExceptionExtensionUtil generated exception in method server-inbound
                    	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
                    	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
                    	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
                    	at java.lang.reflect.Constructor.newInstance(Constructor.java:494)
                    	at extension.exception.ThrowExceptionExtensionUtil.throwException(ThrowExceptionExtensionUtil.java:25)
                    	at extension.exception.ThrowExceptionWebServiceInterceptor.interceptMessage(ThrowExceptionWebServiceInterceptor.java:68)
                    	at framework.extensions.WebServiceInterceptorManager.interceptMessage(WebServiceInterceptorManager.java:331)
                    	at framework.extensions.WebServiceInterceptorManager.interceptHandleMessage(WebServiceInterceptorManager.java:258)
                    	at framework.extensions.WebServiceInterceptorManager.interceptHandleMessageWebServiceHandler(WebServiceInterceptorManager.java:56)
                    	at framework.extensions.Handler.handleMessage(Handler.java:49)
                    	at framework.extensions.Handler.handleMessage(Handler.java:18)
                    	at com.sun.xml.ws.handler.HandlerChainCaller.callProtocolHandlers(HandlerChainCaller.java:667)
                    	at com.sun.xml.ws.handler.HandlerChainCaller.internalCallHandlers(HandlerChainCaller.java:434)
                    	at com.sun.xml.ws.handler.HandlerChainCaller.callHandlers(HandlerChainCaller.java:359)
                    	at com.sun.xml.ws.protocol.soap.server.SOAPMessageDispatcher.callHandlersOnRequest(SOAPMessageDispatcher.java:360)
                    	at com.sun.xml.ws.protocol.soap.server.SOAPMessageDispatcher.access$100(SOAPMessageDispatcher.java:71)
                    	at com.sun.xml.ws.protocol.soap.server.SOAPMessageDispatcher$SoapInvoker.invoke(SOAPMessageDispatcher.java:513)
                    	at com.sun.xml.ws.protocol.soap.server.SOAPMessageDispatcher.receive(SOAPMessageDispatcher.java:144)
                    	at com.sun.xml.ws.server.Tie.handle(Tie.java:88)
                    	at com.sun.xml.ws.transport.http.servlet.WSServletDelegate.handle(WSServletDelegate.java:279)
                    	at com.sun.xml.ws.transport.http.servlet.WSServletDelegate.doPost(WSServletDelegate.java:232)
                    	at com.sun.xml.ws.transport.http.servlet.WSServlet.doPost(WSServlet.java:77)
                    	at javax.servlet.http.HttpServlet.service(HttpServlet.java:763)
                    	at javax.servlet.http.HttpServlet.service(HttpServlet.java:856)
                    	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
                    	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
                    	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:214)
                    	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
                    	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
                    	at org.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:198)
                    	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:152)
                    	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
                    	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
                    	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137)
                    	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
                    	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:117)
                    	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
                    	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
                    	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
                    	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
                    	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:535)
                    	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
                    	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
                    	at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:929)
                    	at org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:160)
                    	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:790)
                    	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:709)
                    	at org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:572)
                    	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:644)
                    	at java.lang.Thread.run(Thread.java:595)

                    [TRACE] WebServiceInterceptorManager - -rethrowing
                    [TRACE] WebServiceInterceptorManager - -finally exiting interceptHandleMessageWebService()
                    [TRACE] Handler - -close()
                    [TRACE] WebServiceInterceptorManager - -interceptCloseWebServiceHandler()
                    [TRACE] WebServiceInterceptorManager - -finally exiting interceptCloseWebServiceHandler()


Message context: (scope,key,value)
(handler,javax.xml.ws.wsdl.operation,{http://calc}sum)
(application,javax.xml.ws.binding.attachments.inbound,{})
(handler,javax.xml.ws.service.endpoint.address,http://localhost:8080/CalcWS/endpoint)
(handler,javax.xml.ws.wsdl.service,{http://calc}CalcService)
(application,javax.xml.ws.http.response.code,500)
(handler,javax.xml.ws.wsdl.port,{http://calc}CalcPort)
(handler,com.sun.xml.ws.client.handle,com.sun.xml.ws.client.EndpointIFInvocationHandler@6210fb)
(application,javax.xml.ws.http.response.headers,{Content-Length=[440], Connection=[close], Set-Cookie=[JSESSIONID=F2F815EFA2971DE37FE31F8E4E02F950; Path=/CalcWS], Date=[Wed, 07 May 2008 11:35:42 GMT], Content-Type=[text/xml;charset=utf-8], Server=[Sun-Java-System/Web-Services-Pack-1.4], null=[HTTP/1.1 500 Internal Server Error]})
(handler,com.sun.xml.ws.client.ContentNegotiation,none)
(handler,javax.xml.ws.handler.message.outbound,false)
Inbound SOAP message:
<?xml version="1.0" ?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://calc"><soapenv:Body><soapenv:Fault xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"><faultcode>soapenv:Server</faultcode><faultstring>ThrowExceptionExtensionUtil generated exception in method server-inbound</faultstring></soapenv:Fault></soapenv:Body></soapenv:Envelope>
[TRACE] Handler - handleMessage()
[TRACE] WebServiceInterceptorManager - interceptHandleMessageWebService()
[TRACE] WebServiceInterceptorManager - SOAP message names follow
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.service: '{http://calc}CalcService'
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
[TRACE] WebServiceInterceptorManager - Web Service config path source items
[TRACE] WebServiceInterceptorManager - namespace: 'http://calc'
[TRACE] WebServiceInterceptorManager - service: 'CalcService'
[TRACE] WebServiceInterceptorManager - port: 'CalcPort'
[TRACE] WebServiceInterceptorManager - Extracted config path: '{http://calc}CalcService.CalcPort'
[TRACE] WebServiceInterceptorManager - Using configuration tree: Web Service interception
[TRACE] WebServiceInterceptorManager - Web Service interception config data: [InterceptConfigData: extensionList={[Extension: id=alpha, enabled=false], [Extension: id=exception-thrower, enabled=false], [Extension: id=charlie, enabled=false]} ]
[TRACE] WebServiceInterceptorManager - SOAP message names follow
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.service: '{http://calc}CalcService'
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
[TRACE] WebServiceInterceptorManager - Web Service config path source items
[TRACE] WebServiceInterceptorManager - namespace: 'http://calc'
[TRACE] WebServiceInterceptorManager - service: 'CalcService'
[TRACE] WebServiceInterceptorManager - port: 'CalcPort'
[DEBUG] WebServiceInterceptorManager - Intercepting web service {http://calc}CalcService.CalcPort
[DEBUG] WebServiceInterceptorManager - SOAP Message situation: client-side, inbound, fault
[DEBUG] WebServiceInterceptorManager - Skipping charlie extension because it's disabled
[DEBUG] WebServiceInterceptorManager - Skipping exception-thrower extension because it's disabled
[DEBUG] WebServiceInterceptorManager - Skipping alpha extension because it's disabled
[TRACE] WebServiceInterceptorManager - SOAP message contains a fault; throwing SOAPFaultException with it
[TRACE] WebServiceInterceptorManager - finally exiting interceptHandleMessageWebService()
[TRACE] Handler - close()
[TRACE] WebServiceInterceptorManager - interceptCloseWebServiceHandler()
[TRACE] WebServiceInterceptorManager - finally exiting interceptCloseWebServiceHandler()
Caught web service exception:
class javax.xml.ws.WebServiceException
javax.xml.ws.soap.SOAPFaultException: ThrowExceptionExtensionUtil generated exception in method server-inbound
end

run:

BUILD SUCCESSFUL
Total time: 7 seconds

