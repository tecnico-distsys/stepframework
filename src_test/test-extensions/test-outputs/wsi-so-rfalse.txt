                    (...)


Running the calc.CalcServiceClient program...
begin
Web Service endpoint URL: http://localhost:8080/CalcWS/endpoint
sum 10 2
Using factory stub creation with custom-URL...
[TRACE] Handler - getHeaders()
Message context: (scope,key,value)
(handler,javax.xml.ws.wsdl.operation,{http://calc}sum)
(handler,javax.xml.ws.service.endpoint.address,http://localhost:8080/CalcWS/endpoint)
(handler,javax.xml.ws.wsdl.service,{http://calc}CalcService)
(handler,javax.xml.ws.wsdl.port,{http://calc}CalcPort)
(handler,com.sun.xml.ws.client.handle,com.sun.xml.ws.client.EndpointIFInvocationHandler@6210fb)
(handler,com.sun.xml.ws.client.ContentNegotiation,none)
(handler,javax.xml.ws.handler.message.outbound,true)
Outbound SOAP message:
<?xml version="1.0" ?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://calc"><soapenv:Body><ns1:sum><ns1:a>10</ns1:a><ns1:b>2</ns1:b></ns1:sum></soapenv:Body></soapenv:Envelope>
[TRACE] Handler - handleMessage()
[TRACE] WebServiceInterceptorManager - interceptHandleMessageWebService()
[TRACE] ExtensionEngine - Attempting automatic extension engine initialization
[TRACE] ExtensionEngine - entering init
[DEBUG] ExtensionEngine - load extension engine configuration from /extensions.properties
[TRACE] ExtensionEngine - entering loadConfig
[TRACE] ExtensionEngine - load extensions properties
[TRACE] ExtensionEngine - /extensions.properties
[TRACE] ExtensionEngine - extensions config properties (key: 'value')
[TRACE] ExtensionEngine - extensions.enabled: 'true'
[TRACE] ExtensionEngine - extensions.intercept.service[]: ''
[TRACE] ExtensionEngine - extensions.intercept.web-service[]: 'alpha,exception-thrower,charlie'
[TRACE] ExtensionEngine - extensions.list: 'alpha,bravo,exception-thrower,charlie'
[DEBUG] ExtensionEngine - load configuration for each extension
[TRACE] Extension - entering loadConfig
[TRACE] Extension - load alpha extension properties from /extension-alpha.properties
[TRACE] Extension - extension alpha config properties (key: 'value')
[TRACE] Extension - extension.web-service-interceptor: 'extension.hello.HelloWebServiceInterceptor'
[TRACE] Extension - extension.service-interceptor: 'extension.hello.HelloServiceInterceptor'
[TRACE] Extension - greeting: 'Alpha'
[TRACE] Extension - extension.listener: 'extension.hello.HelloExtensionListener'
[TRACE] Extension - extension.enabled: 'false'
[TRACE] Extension - remove extension alpha properties and keep the remaining ones as additional configuration
[TRACE] Extension - finally exiting loadConfig
[TRACE] Extension - entering loadConfig
[TRACE] Extension - load bravo extension properties from /extension-bravo.properties
[TRACE] Extension - extension bravo config properties (key: 'value')
[TRACE] Extension - extension.web-service-interceptor: 'extension.hello.HelloWebServiceInterceptor'
[TRACE] Extension - extension.service-interceptor: 'extension.hello.HelloServiceInterceptor'
[TRACE] Extension - greeting: 'Bravo'
[TRACE] Extension - extension.listener: 'extension.hello.HelloExtensionListener'
[TRACE] Extension - extension.enabled: 'false'
[TRACE] Extension - remove extension bravo properties and keep the remaining ones as additional configuration
[TRACE] Extension - finally exiting loadConfig
[TRACE] Extension - entering loadConfig
[TRACE] Extension - load exception-thrower extension properties from /extension-exception-thrower.properties
[TRACE] Extension - extension exception-thrower config properties (key: 'value')
[TRACE] Extension - extension.web-service-interceptor: 'extension.exception.ThrowExceptionWebServiceInterceptor'
[TRACE] Extension - extension.enabled: 'false'
[TRACE] Extension - extension.listener: 'extension.exception.ThrowExceptionExtensionListener'
[TRACE] Extension - listener.initialized.throw: ''
[TRACE] Extension - web-service-interceptor.throw: ''
[TRACE] Extension - listener.destroyed.throw: ''
[TRACE] Extension - service-interceptor.before.throw: ''
[TRACE] Extension - service-interceptor.after.throw: ''
[TRACE] Extension - web-service-interceptor.throw.situation: ''
[TRACE] Extension - extension.service-interceptor: 'extension.exception.ThrowExceptionServiceInterceptor'
[TRACE] Extension - remove extension exception-thrower properties and keep the remaining ones as additional configuration
[TRACE] Extension - finally exiting loadConfig
[TRACE] Extension - entering loadConfig
[TRACE] Extension - load charlie extension properties from /extension-charlie.properties
[TRACE] Extension - extension charlie config properties (key: 'value')
[TRACE] Extension - extension.web-service-interceptor: 'extension.hello.HelloWebServiceInterceptor'
[TRACE] Extension - extension.service-interceptor: 'extension.hello.HelloServiceInterceptor'
[TRACE] Extension - greeting: 'Charlie'
[TRACE] Extension - extension.listener: 'extension.hello.HelloExtensionListener'
[TRACE] Extension - extension.enabled: 'false'
[TRACE] Extension - remove extension charlie properties and keep the remaining ones as additional configuration
[TRACE] Extension - finally exiting loadConfig
[TRACE] ExtensionEngine - load intercept configs
[TRACE] ExtensionEngine - ignoring empty extensions.intercept.service[]
[TRACE] ExtensionEngine - Intercept configuration trees:
[TRACE] ExtensionEngine - Configuration tree Service interception
root [ConfigNode: config=null, #childNodes=0]

[TRACE] ExtensionEngine - Configuration tree Web Service interception
root [ConfigNode: config=[InterceptConfigData: extensionList={[Extension: id=alpha, enabled=false], [Extension: id=exception-thrower, enabled=false], [Extension: id=charlie, enabled=false]} ], #childNodes=0]

[TRACE] ExtensionEngine - remove extensions properties and keep the remaining ones as additional configuration
[TRACE] ExtensionEngine - finally exiting loadConfig
[DEBUG] ExtensionEngine - extension engine configuration loaded successfully
[DEBUG] ExtensionEngine - start extensions
[TRACE] Extension - entering start
[DEBUG] Extension - extension alpha disabled. Skipping further initialization.
[INFO] Extension - Extension alpha disabled
[TRACE] Extension - finally exiting start
[TRACE] Extension - entering start
[DEBUG] Extension - extension bravo disabled. Skipping further initialization.
[INFO] Extension - Extension bravo disabled
[TRACE] Extension - finally exiting start
[TRACE] Extension - entering start
[DEBUG] Extension - extension exception-thrower disabled. Skipping further initialization.
[INFO] Extension - Extension exception-thrower disabled
[TRACE] Extension - finally exiting start
[TRACE] Extension - entering start
[DEBUG] Extension - extension charlie disabled. Skipping further initialization.
[INFO] Extension - Extension charlie disabled
[TRACE] Extension - finally exiting start
[DEBUG] ExtensionEngine - extensions started successfully
[INFO] ExtensionEngine - Extension engine enabled
[TRACE] ExtensionEngine - set init flag
[TRACE] ExtensionEngine - finally exiting init
[TRACE] ExtensionEngine - Automatic extension engine initialization successful!
[TRACE] WebServiceInterceptorManager - SOAP message names follow
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.service: '{http://calc}CalcService'
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
[TRACE] WebServiceInterceptorManager - Web Service config path source items
[TRACE] WebServiceInterceptorManager - namespace: 'http://calc'
[TRACE] WebServiceInterceptorManager - service: 'CalcService'
[TRACE] WebServiceInterceptorManager - port: 'CalcPort'
[TRACE] WebServiceInterceptorManager - Extracted config path: '{http://calc}CalcService.CalcPort'
[TRACE] WebServiceInterceptorManager - Using configuration tree: Web Service interception
[TRACE] WebServiceInterceptorManager - Web Service interception config data: [InterceptConfigData: extensionList={[Extension: id=alpha, enabled=false], [Extension: id=exception-thrower, enabled=false], [Extension: id=charlie, enabled=false]} ]
[TRACE] WebServiceInterceptorManager - SOAP message names follow
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.service: '{http://calc}CalcService'
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
[TRACE] WebServiceInterceptorManager - Web Service config path source items
[TRACE] WebServiceInterceptorManager - namespace: 'http://calc'
[TRACE] WebServiceInterceptorManager - service: 'CalcService'
[TRACE] WebServiceInterceptorManager - port: 'CalcPort'
[DEBUG] WebServiceInterceptorManager - Intercepting web service {http://calc}CalcService.CalcPort
[DEBUG] WebServiceInterceptorManager - SOAP Message situation: client-side, outbound, non-fault
[DEBUG] WebServiceInterceptorManager - Skipping alpha extension because it's disabled
[DEBUG] WebServiceInterceptorManager - Skipping exception-thrower extension because it's disabled
[DEBUG] WebServiceInterceptorManager - Skipping charlie extension because it's disabled
[TRACE] WebServiceInterceptorManager - finally exiting interceptHandleMessageWebService()
Outbound SOAP message:
<?xml version="1.0" ?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://calc" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soapenv:Body><ns1:sum><ns1:a>10</ns1:a><ns1:b>2</ns1:b></ns1:sum></soapenv:Body></soapenv:Envelope>
Message context: (scope,key,value)
(handler,javax.xml.ws.wsdl.operation,{http://calc}sum)
(handler,javax.xml.ws.service.endpoint.address,http://localhost:8080/CalcWS/endpoint)
(handler,javax.xml.ws.wsdl.service,{http://calc}CalcService)
(handler,javax.xml.ws.wsdl.port,{http://calc}CalcPort)
(handler,com.sun.xml.ws.client.handle,com.sun.xml.ws.client.EndpointIFInvocationHandler@6210fb)
(handler,com.sun.xml.ws.client.ContentNegotiation,none)
(handler,javax.xml.ws.handler.message.outbound,true)


                    [TRACE] Handler - -getHeaders()
                    Message context: (scope,key,value)
                    (application,javax.xml.ws.binding.attachments.inbound,{})
                    (application,javax.xml.ws.wsdl.service,{http://calc}CalcService)
                    (application,javax.xml.ws.servlet.request,org.apache.coyote.tomcat5.CoyoteRequestFacade@7db937)
                    (application,javax.xml.ws.servlet.context,org.apache.catalina.core.ApplicationContextFacade@b049a)
                    (application,javax.xml.ws.wsdl.port,{http://calc}CalcPort)
                    (application,javax.xml.ws.http.request.headers,com.sun.xml.ws.transport.Headers@29e4947f)
                    (application,javax.xml.ws.servlet.response,org.apache.coyote.tomcat5.CoyoteResponseFacade@15b28d8)
                    (application,com.sun.xml.ws.common.MtomThresholdValue,null)
                    (application,javax.xml.ws.servlet.session,org.apache.catalina.session.StandardSessionFacade@1d688e2)
                    (handler,javax.xml.ws.handler.message.outbound,false)
                    (application,javax.xml.ws.http.request.method,POST)
                    Inbound SOAP message:
                    <?xml version="1.0" ?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://calc" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soapenv:Body><ns1:sum><ns1:a>10</ns1:a><ns1:b>2</ns1:b></ns1:sum></soapenv:Body></soapenv:Envelope>
                    [TRACE] Handler - -handleMessage()
                    [TRACE] WebServiceInterceptorManager - -interceptHandleMessageWebService()
                    [TRACE] WebServiceInterceptorManager - -SOAP message names follow
                    [TRACE] WebServiceInterceptorManager - -javax.xml.ws.wsdl.service: '{http://calc}CalcService'
                    [TRACE] WebServiceInterceptorManager - -javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
                    [TRACE] WebServiceInterceptorManager - -Web Service config path source items
                    [TRACE] WebServiceInterceptorManager - -namespace: 'http://calc'
                    [TRACE] WebServiceInterceptorManager - -service: 'CalcService'
                    [TRACE] WebServiceInterceptorManager - -port: 'CalcPort'
                    [TRACE] WebServiceInterceptorManager - -Extracted config path: '{http://calc}CalcService.CalcPort'
                    [TRACE] WebServiceInterceptorManager - -Using configuration tree: Web Service interception
                    [TRACE] WebServiceInterceptorManager - -Web Service interception config data: [InterceptConfigData: extensionList={[Extension: id=xray, enabled=true, listener=extension.hello.HelloExtensionListener, service-interceptor=extension.hello.HelloServiceInterceptor, web-service-interceptor=extension.hello.HelloWebServiceInterceptor], [Extension: id=exception-thrower, enabled=true, listener=extension.exception.ThrowExceptionExtensionListener, service-interceptor=extension.exception.ThrowExceptionServiceInterceptor, web-service-interceptor=extension.exception.ThrowExceptionWebServiceInterceptor], [Extension: id=zulu, enabled=true, listener=extension.hello.HelloExtensionListener, service-interceptor=extension.hello.HelloServiceInterceptor, web-service-interceptor=extension.hello.HelloWebServiceInterceptor]} ]
                    [TRACE] WebServiceInterceptorManager - -SOAP message names follow
                    [TRACE] WebServiceInterceptorManager - -javax.xml.ws.wsdl.service: '{http://calc}CalcService'
                    [TRACE] WebServiceInterceptorManager - -javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
                    [TRACE] WebServiceInterceptorManager - -Web Service config path source items
                    [TRACE] WebServiceInterceptorManager - -namespace: 'http://calc'
                    [TRACE] WebServiceInterceptorManager - -service: 'CalcService'
                    [TRACE] WebServiceInterceptorManager - -port: 'CalcPort'
                    [DEBUG] WebServiceInterceptorManager - -Intercepting web service {http://calc}CalcService.CalcPort
                    [DEBUG] WebServiceInterceptorManager - -SOAP Message situation: server-side, inbound, non-fault
                    [DEBUG] WebServiceInterceptorManager - -Invoking zulu extension
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor instance
                    [TRACE] Extension - -create web service interceptor instance
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor parameter instance
                    [TRACE] WebServiceInterceptorManager - -call web service interceptor
                    Zulu from HelloWebServiceInterceptor.interceptMessage SOAP message situation: server-side, inbound
                    [TRACE] WebServiceInterceptorManager - -interceptor return value: 'true'
                    [DEBUG] WebServiceInterceptorManager - -Invoking exception-thrower extension
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor instance
                    [TRACE] Extension - -create web service interceptor instance
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor parameter instance
                    [TRACE] WebServiceInterceptorManager - -call web service interceptor
                    returnPropertyValue false
                    no web service interceptor throw specified (property web-service-interceptor.throw); skipping
                    [TRACE] WebServiceInterceptorManager - -interceptor return value: 'true'
                    [DEBUG] WebServiceInterceptorManager - -Invoking xray extension
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor instance
                    [TRACE] Extension - -create web service interceptor instance
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor parameter instance
                    [TRACE] WebServiceInterceptorManager - -call web service interceptor
                    Xray from HelloWebServiceInterceptor.interceptMessage SOAP message situation: server-side, inbound
                    [TRACE] WebServiceInterceptorManager - -interceptor return value: 'true'
                    [TRACE] WebServiceInterceptorManager - -finally exiting interceptHandleMessageWebService()
                    Inbound SOAP message:
                    <?xml version="1.0" ?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://calc" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soapenv:Body><ns1:sum><ns1:a>10</ns1:a><ns1:b>2</ns1:b></ns1:sum></soapenv:Body></soapenv:Envelope>
                    Message context: (scope,key,value)
                    (application,javax.xml.ws.binding.attachments.inbound,{})
                    (application,javax.xml.ws.wsdl.service,{http://calc}CalcService)
                    (application,javax.xml.ws.servlet.request,org.apache.coyote.tomcat5.CoyoteRequestFacade@7db937)
                    (application,javax.xml.ws.servlet.context,org.apache.catalina.core.ApplicationContextFacade@b049a)
                    (application,javax.xml.ws.wsdl.port,{http://calc}CalcPort)
                    (application,javax.xml.ws.http.request.headers,com.sun.xml.ws.transport.Headers@29e4947f)
                    (application,javax.xml.ws.servlet.response,org.apache.coyote.tomcat5.CoyoteResponseFacade@15b28d8)
                    (application,com.sun.xml.ws.common.MtomThresholdValue,null)
                    (application,javax.xml.ws.servlet.session,org.apache.catalina.session.StandardSessionFacade@1d688e2)
                    (handler,javax.xml.ws.handler.message.outbound,false)
                    (application,javax.xml.ws.http.request.method,POST)
                    sum 10 2
                    Message context: (scope,key,value)
                    (application,javax.xml.ws.wsdl.operation,{http://calc}sum)
                    (application,javax.xml.ws.binding.attachments.inbound,{})
                    (application,javax.xml.ws.servlet.context,org.apache.catalina.core.ApplicationContextFacade@b049a)
                    (application,javax.xml.ws.servlet.session,org.apache.catalina.session.StandardSessionFacade@1d688e2)
                    (application,javax.xml.ws.wsdl.service,{http://calc}CalcService)
                    (application,javax.xml.ws.servlet.request,org.apache.coyote.tomcat5.CoyoteRequestFacade@7db937)
                    (application,javax.xml.ws.wsdl.port,{http://calc}CalcPort)
                    (application,javax.xml.ws.servlet.response,org.apache.coyote.tomcat5.CoyoteResponseFacade@15b28d8)
                    (application,javax.xml.ws.http.request.headers,com.sun.xml.ws.transport.Headers@29e4947f)
                    (application,com.sun.xml.ws.common.MtomThresholdValue,null)
                    (application,javax.xml.ws.http.request.method,POST)
                    (handler,javax.xml.ws.handler.message.outbound,true)
                    (application,com.sun.xml.ws.client.ContentNegotiation,null)
                    Outbound SOAP message:
                    <?xml version="1.0" ?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://calc"><soapenv:Body><ns1:sumResponse><ns1:return>12</ns1:return></ns1:sumResponse></soapenv:Body></soapenv:Envelope>
                    [TRACE] Handler - -handleMessage()
                    [TRACE] WebServiceInterceptorManager - -interceptHandleMessageWebService()
                    [TRACE] WebServiceInterceptorManager - -SOAP message names follow
                    [TRACE] WebServiceInterceptorManager - -javax.xml.ws.wsdl.service: '{http://calc}CalcService'
                    [TRACE] WebServiceInterceptorManager - -javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
                    [TRACE] WebServiceInterceptorManager - -Web Service config path source items
                    [TRACE] WebServiceInterceptorManager - -namespace: 'http://calc'
                    [TRACE] WebServiceInterceptorManager - -service: 'CalcService'
                    [TRACE] WebServiceInterceptorManager - -port: 'CalcPort'
                    [TRACE] WebServiceInterceptorManager - -Extracted config path: '{http://calc}CalcService.CalcPort'
                    [TRACE] WebServiceInterceptorManager - -Using configuration tree: Web Service interception
                    [TRACE] WebServiceInterceptorManager - -Web Service interception config data: [InterceptConfigData: extensionList={[Extension: id=xray, enabled=true, listener=extension.hello.HelloExtensionListener, service-interceptor=extension.hello.HelloServiceInterceptor, web-service-interceptor=extension.hello.HelloWebServiceInterceptor], [Extension: id=exception-thrower, enabled=true, listener=extension.exception.ThrowExceptionExtensionListener, service-interceptor=extension.exception.ThrowExceptionServiceInterceptor, web-service-interceptor=extension.exception.ThrowExceptionWebServiceInterceptor], [Extension: id=zulu, enabled=true, listener=extension.hello.HelloExtensionListener, service-interceptor=extension.hello.HelloServiceInterceptor, web-service-interceptor=extension.hello.HelloWebServiceInterceptor]} ]
                    [TRACE] WebServiceInterceptorManager - -SOAP message names follow
                    [TRACE] WebServiceInterceptorManager - -javax.xml.ws.wsdl.service: '{http://calc}CalcService'
                    [TRACE] WebServiceInterceptorManager - -javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
                    [TRACE] WebServiceInterceptorManager - -Web Service config path source items
                    [TRACE] WebServiceInterceptorManager - -namespace: 'http://calc'
                    [TRACE] WebServiceInterceptorManager - -service: 'CalcService'
                    [TRACE] WebServiceInterceptorManager - -port: 'CalcPort'
                    [DEBUG] WebServiceInterceptorManager - -Intercepting web service {http://calc}CalcService.CalcPort
                    [DEBUG] WebServiceInterceptorManager - -SOAP Message situation: server-side, outbound, non-fault
                    [DEBUG] WebServiceInterceptorManager - -Invoking xray extension
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor instance
                    [TRACE] Extension - -create web service interceptor instance
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor parameter instance
                    [TRACE] WebServiceInterceptorManager - -call web service interceptor
                    Xray from HelloWebServiceInterceptor.interceptMessage SOAP message situation: server-side, outbound
                    [TRACE] WebServiceInterceptorManager - -interceptor return value: 'true'
                    [DEBUG] WebServiceInterceptorManager - -Invoking exception-thrower extension
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor instance
                    [TRACE] Extension - -create web service interceptor instance
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor parameter instance
                    [TRACE] WebServiceInterceptorManager - -call web service interceptor
                    returnPropertyValue false
                    Returning false on server-outbound
                    [TRACE] WebServiceInterceptorManager - -interceptor return value: 'false'
                    [TRACE] WebServiceInterceptorManager - -web service interceptor returned false
                    [TRACE] WebServiceInterceptorManager - -return false in the end of loop
                    [TRACE] WebServiceInterceptorManager - -from now on, the loop can no longer change direction
                    [DEBUG] WebServiceInterceptorManager - -Invoking zulu extension
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor instance
                    [TRACE] Extension - -create web service interceptor instance
                    [TRACE] WebServiceInterceptorManager - -create web service interceptor parameter instance
                    [TRACE] WebServiceInterceptorManager - -call web service interceptor
                    Zulu from HelloWebServiceInterceptor.interceptMessage SOAP message situation: server-side, outbound
                    [TRACE] WebServiceInterceptorManager - -interceptor return value: 'true'
                    [TRACE] WebServiceInterceptorManager - -finally exiting interceptHandleMessageWebService()
                    [TRACE] Handler - -close()
                    [TRACE] WebServiceInterceptorManager - -interceptCloseWebServiceHandler()
                    [TRACE] WebServiceInterceptorManager - -finally exiting interceptCloseWebServiceHandler()


Message context: (scope,key,value)
(handler,javax.xml.ws.wsdl.operation,{http://calc}sum)
(application,javax.xml.ws.binding.attachments.inbound,{})
(handler,javax.xml.ws.service.endpoint.address,http://localhost:8080/CalcWS/endpoint)
(handler,javax.xml.ws.wsdl.service,{http://calc}CalcService)
(application,javax.xml.ws.http.response.code,200)
(handler,javax.xml.ws.wsdl.port,{http://calc}CalcPort)
(handler,com.sun.xml.ws.client.handle,com.sun.xml.ws.client.EndpointIFInvocationHandler@6210fb)
[TRACE] Handler - handleMessage()
[TRACE] WebServiceInterceptorManager - interceptHandleMessageWebService()
(application,javax.xml.ws.http.response.headers,{Content-Length=[277], Set-Cookie=[JSESSIONID=E4A1D745F3C6807029916965199F3EA0; Path=/CalcWS], SOAPAction=[""], Date=[Wed, 07 May 2008 14:10:26 GMT], Content-Type=[text/xml;charset=utf-8], Server=[Sun-Java-System/Web-Services-Pack-1.4], null=[HTTP/1.1 200 OK]})
(handler,com.sun.xml.ws.client.ContentNegotiation,none)
(handler,javax.xml.ws.handler.message.outbound,false)
Inbound SOAP message:
<?xml version="1.0" ?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://calc" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soapenv:Body><ns1:sumResponse><ns1:return>12</ns1:return></ns1:sumResponse></soapenv:Body></soapenv:Envelope>
[TRACE] WebServiceInterceptorManager - SOAP message names follow
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.service: '{http://calc}CalcService'
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
[TRACE] WebServiceInterceptorManager - Web Service config path source items
[TRACE] WebServiceInterceptorManager - namespace: 'http://calc'
[TRACE] WebServiceInterceptorManager - service: 'CalcService'
[TRACE] WebServiceInterceptorManager - port: 'CalcPort'
[TRACE] WebServiceInterceptorManager - Extracted config path: '{http://calc}CalcService.CalcPort'
[TRACE] WebServiceInterceptorManager - Using configuration tree: Web Service interception
[TRACE] WebServiceInterceptorManager - Web Service interception config data: [InterceptConfigData: extensionList={[Extension: id=alpha, enabled=false], [Extension: id=exception-thrower, enabled=false], [Extension: id=charlie, enabled=false]} ]
[TRACE] WebServiceInterceptorManager - SOAP message names follow
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.service: '{http://calc}CalcService'
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
[TRACE] WebServiceInterceptorManager - Web Service config path source items
[TRACE] WebServiceInterceptorManager - namespace: 'http://calc'
[TRACE] WebServiceInterceptorManager - service: 'CalcService'
[TRACE] WebServiceInterceptorManager - port: 'CalcPort'
[DEBUG] WebServiceInterceptorManager - Intercepting web service {http://calc}CalcService.CalcPort
[DEBUG] WebServiceInterceptorManager - SOAP Message situation: client-side, inbound, non-fault
[DEBUG] WebServiceInterceptorManager - Skipping charlie extension because it's disabled
[DEBUG] WebServiceInterceptorManager - Skipping exception-thrower extension because it's disabled
[DEBUG] WebServiceInterceptorManager - Skipping alpha extension because it's disabled
[TRACE] WebServiceInterceptorManager - finally exiting interceptHandleMessageWebService()
Inbound SOAP message:
<?xml version="1.0" ?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://calc" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soapenv:Body><ns1:sumResponse><ns1:return>12</ns1:return></ns1:sumResponse></soapenv:Body></soapenv:Envelope>
Message context: (scope,key,value)
(handler,javax.xml.ws.wsdl.operation,{http://calc}sum)
(application,javax.xml.ws.binding.attachments.inbound,{})
(handler,javax.xml.ws.service.endpoint.address,http://localhost:8080/CalcWS/endpoint)
(handler,javax.xml.ws.wsdl.service,{http://calc}CalcService)
(application,javax.xml.ws.http.response.code,200)
(handler,javax.xml.ws.wsdl.port,{http://calc}CalcPort)
(handler,com.sun.xml.ws.client.handle,com.sun.xml.ws.client.EndpointIFInvocationHandler@6210fb)
[TRACE] Handler - close()
[TRACE] WebServiceInterceptorManager - interceptCloseWebServiceHandler()
[TRACE] WebServiceInterceptorManager - finally exiting interceptCloseWebServiceHandler()
(application,javax.xml.ws.http.response.headers,{Content-Length=[277], Set-Cookie=[JSESSIONID=E4A1D745F3C6807029916965199F3EA0; Path=/CalcWS], SOAPAction=[""], Date=[Wed, 07 May 2008 14:10:26 GMT], Content-Type=[text/xml;charset=utf-8], Server=[Sun-Java-System/Web-Services-Pack-1.4], null=[HTTP/1.1 200 OK]})
(handler,com.sun.xml.ws.client.ContentNegotiation,none)
(handler,javax.xml.ws.handler.message.outbound,false)
= 12
end

run:

BUILD SUCCESSFUL
Total time: 7 seconds

