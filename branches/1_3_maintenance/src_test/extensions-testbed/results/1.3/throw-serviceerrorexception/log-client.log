[2010-03-19 14:57:03,932]TRACE     0[main](SayHelloAction.java:58) - Starting main
[2010-03-19 14:57:03,936]TRACE     4[main](SayHelloAction.java:59) - [Ljava.lang.String;@1a2961b
[2010-03-19 14:57:03,936]TRACE     4[main](SayHelloAction.java:64) - Invoking sayHello()
[2010-03-19 14:57:03,996]TRACE    64[main](ServiceInterceptorManager.java:49) - entering interceptBefore()
[2010-03-19 14:57:03,997]TRACE    65[main](ExtensionEngine.java:344) - Attempting automatic extension engine initialization
[2010-03-19 14:57:03,997]TRACE    65[main](ExtensionEngine.java:279) - entering init
[2010-03-19 14:57:03,997]DEBUG    65[main](ExtensionEngine.java:284) - load extension engine configuration from /extensions.properties
[2010-03-19 14:57:03,998]TRACE    66[main](ExtensionEngine.java:365) - entering loadConfig
[2010-03-19 14:57:03,998]TRACE    66[main](ExtensionEngine.java:367) - load extensions properties
[2010-03-19 14:57:03,998]TRACE    66[main](ExtensionEngine.java:368) - /extensions.properties
[2010-03-19 14:57:04,017]TRACE    85[main](ExtensionEngine.java:378) - extensions config properties (key: 'value')
[2010-03-19 14:57:04,018]TRACE    86[main](ExtensionEngine.java:382) - extensions.enabled: 'true'
[2010-03-19 14:57:04,018]TRACE    86[main](ExtensionEngine.java:382) - extensions.intercept.service[]: ''
[2010-03-19 14:57:04,018]TRACE    86[main](ExtensionEngine.java:382) - extensions.intercept.web-service[]: 'trace,cipher,errors,trace'
[2010-03-19 14:57:04,019]TRACE    87[main](ExtensionEngine.java:382) - extensions.list: 'trace,errors,cipher'
[2010-03-19 14:57:04,021]DEBUG    89[main](ExtensionEngine.java:414) - load configuration for each extension
[2010-03-19 14:57:04,022]TRACE    90[main](Extension.java:315) - entering loadConfig
[2010-03-19 14:57:04,022]TRACE    90[main](Extension.java:321) - load trace extension properties from /extension-trace.properties
[2010-03-19 14:57:04,042]TRACE   110[main](Extension.java:336) - extension trace config properties (key: 'value')
[2010-03-19 14:57:04,042]TRACE   110[main](Extension.java:340) - pretty-print: 'true'
[2010-03-19 14:57:04,042]TRACE   110[main](Extension.java:340) - output: 'C:/Java/stepcat/1.x-6.0.14/temp/soap-trace-client.log'
[2010-03-19 14:57:04,043]TRACE   111[main](Extension.java:340) - extension.web-service-interceptor: 'step.extension.trace.TraceWebServiceInterceptor'
[2010-03-19 14:57:04,043]TRACE   111[main](Extension.java:340) - extension.listener: 'step.extension.trace.TraceExtensionListener'
[2010-03-19 14:57:04,043]TRACE   111[main](Extension.java:340) - extension.enabled: 'true'
[2010-03-19 14:57:04,043]TRACE   111[main](Extension.java:368) - remove extension trace properties and keep the remaining ones as additional configuration
[2010-03-19 14:57:04,044]TRACE   112[main](Extension.java:379) - finally exiting loadConfig
[2010-03-19 14:57:04,044]TRACE   112[main](Extension.java:315) - entering loadConfig
[2010-03-19 14:57:04,044]TRACE   112[main](Extension.java:321) - load errors extension properties from /extension-errors.properties
[2010-03-19 14:57:04,061]TRACE   129[main](Extension.java:336) - extension errors config properties (key: 'value')
[2010-03-19 14:57:04,061]TRACE   129[main](Extension.java:340) - extension.web-service-interceptor: 'step.extension.errors.ErrorsWebServiceInterceptor'
[2010-03-19 14:57:04,061]TRACE   129[main](Extension.java:340) - extension.listener: 'step.extension.errors.ErrorsExtensionListener'
[2010-03-19 14:57:04,062]TRACE   130[main](Extension.java:340) - extension.enabled: 'true'
[2010-03-19 14:57:04,062]TRACE   130[main](Extension.java:368) - remove extension errors properties and keep the remaining ones as additional configuration
[2010-03-19 14:57:04,062]TRACE   130[main](Extension.java:379) - finally exiting loadConfig
[2010-03-19 14:57:04,062]TRACE   130[main](Extension.java:315) - entering loadConfig
[2010-03-19 14:57:04,063]TRACE   131[main](Extension.java:321) - load cipher extension properties from /extension-cipher.properties
[2010-03-19 14:57:04,079]TRACE   147[main](Extension.java:336) - extension cipher config properties (key: 'value')
[2010-03-19 14:57:04,079]TRACE   147[main](Extension.java:340) - extension.web-service-interceptor: 'step.extension.cipher.CipherWebServiceInterceptor'
[2010-03-19 14:57:04,079]TRACE   147[main](Extension.java:340) - extension.listener: 'step.extension.cipher.CipherExtensionListener'
[2010-03-19 14:57:04,079]TRACE   147[main](Extension.java:340) - extension.enabled: 'false'
[2010-03-19 14:57:04,079]TRACE   147[main](Extension.java:368) - remove extension cipher properties and keep the remaining ones as additional configuration
[2010-03-19 14:57:04,081]TRACE   149[main](Extension.java:379) - finally exiting loadConfig
[2010-03-19 14:57:04,081]TRACE   149[main](ExtensionEngine.java:422) - load intercept configs
[2010-03-19 14:57:04,081]TRACE   149[main](ExtensionEngine.java:521) - ignoring empty extensions.intercept.service[]
[2010-03-19 14:57:04,082]TRACE   150[main](ExtensionEngine.java:426) - Intercept configuration trees:
[2010-03-19 14:57:04,083]TRACE   151[main](ExtensionEngine.java:427) - Configuration tree Service interception
root [ConfigNode: config=null, #childNodes=0]

[2010-03-19 14:57:04,083]TRACE   151[main](ExtensionEngine.java:428) - Configuration tree Web Service interception
root [ConfigNode: config=[InterceptConfigData: extensionList={[Extension: id=trace, enabled=true], [Extension: id=cipher, enabled=false], [Extension: id=errors, enabled=true], [Extension: id=trace, enabled=true]} ], #childNodes=0]

[2010-03-19 14:57:04,083]TRACE   151[main](ExtensionEngine.java:432) - remove extensions properties and keep the remaining ones as additional configuration
[2010-03-19 14:57:04,084]TRACE   152[main](ExtensionEngine.java:437) - finally exiting loadConfig
[2010-03-19 14:57:04,084]DEBUG   152[main](ExtensionEngine.java:287) - extension engine configuration loaded successfully
[2010-03-19 14:57:04,084]DEBUG   152[main](ExtensionEngine.java:306) - start extensions
[2010-03-19 14:57:04,084]TRACE   152[main](Extension.java:397) - entering start
[2010-03-19 14:57:04,084]TRACE   152[main](Extension.java:431) - skipping service interceptor class loading
[2010-03-19 14:57:04,087]TRACE   155[main](Extension.java:477) - load web service interceptor class
[2010-03-19 14:57:04,088]TRACE   156[main](Extension.java:496) - create web service interceptor instance
[2010-03-19 14:57:04,088]TRACE   156[main](Extension.java:477) - load listener class
[2010-03-19 14:57:04,089]TRACE   157[main](Extension.java:496) - create listener instance
[2010-03-19 14:57:04,091]TRACE   159[main](Extension.java:578) - invoke listener on EXTENSION_INITIALIZED
[2010-03-19 14:57:04,092] INFO   160[main](Extension.java:420) - Extension trace enabled
[2010-03-19 14:57:04,092]TRACE   160[main](Extension.java:423) - finally exiting start
[2010-03-19 14:57:04,092]TRACE   160[main](Extension.java:397) - entering start
[2010-03-19 14:57:04,092]TRACE   160[main](Extension.java:431) - skipping service interceptor class loading
[2010-03-19 14:57:04,093]TRACE   161[main](Extension.java:477) - load web service interceptor class
[2010-03-19 14:57:04,094]TRACE   162[main](Extension.java:496) - create web service interceptor instance
[2010-03-19 14:57:04,094]TRACE   162[main](Extension.java:477) - load listener class
[2010-03-19 14:57:04,094]TRACE   162[main](Extension.java:496) - create listener instance
[2010-03-19 14:57:04,096]TRACE   164[main](Extension.java:578) - invoke listener on EXTENSION_INITIALIZED
[2010-03-19 14:57:04,097] INFO   165[main](Extension.java:420) - Extension errors enabled
[2010-03-19 14:57:04,097]TRACE   165[main](Extension.java:423) - finally exiting start
[2010-03-19 14:57:04,097]TRACE   165[main](Extension.java:397) - entering start
[2010-03-19 14:57:04,097]DEBUG   165[main](Extension.java:403) - extension cipher disabled. Skipping further initialization.
[2010-03-19 14:57:04,097] INFO   165[main](Extension.java:420) - Extension cipher disabled
[2010-03-19 14:57:04,097]TRACE   165[main](Extension.java:423) - finally exiting start
[2010-03-19 14:57:04,099]DEBUG   167[main](ExtensionEngine.java:312) - extensions started successfully
[2010-03-19 14:57:04,099] INFO   167[main](ExtensionEngine.java:328) - Extension engine enabled
[2010-03-19 14:57:04,099]TRACE   167[main](ExtensionEngine.java:331) - set init flag
[2010-03-19 14:57:04,099]TRACE   167[main](ExtensionEngine.java:334) - finally exiting init
[2010-03-19 14:57:04,099]TRACE   167[main](ExtensionEngine.java:346) - Automatic extension engine initialization successful!
[2010-03-19 14:57:04,101]TRACE   169[main](ServiceInterceptorManager.java:99) - service instance full class name: hello.ws.client.service.SayHelloService
[2010-03-19 14:57:04,103]TRACE   171[main](ServiceInterceptorManager.java:105) - Using configuration tree: Service interception
[2010-03-19 14:57:04,103]TRACE   171[main](ServiceInterceptorManager.java:116) - no service interception configuration found; ignoring service execution
[2010-03-19 14:57:04,103]TRACE   171[main](ServiceInterceptorManager.java:55) - finally exiting interceptBefore()
[2010-03-19 14:57:04,103]TRACE   171[main](SayHelloService.java:32) - Starting SayHelloService action
[2010-03-19 14:57:04,103]DEBUG   171[main](SayHelloService.java:34) - create Web Service stub
[2010-03-19 14:57:04,122]DEBUG   190[main](Config.java:39) - Config constructor invoked
[2010-03-19 14:57:04,122]DEBUG   190[main](Config.java:166) - Configuration has not been loaded yet. Try to load default properties file.
[2010-03-19 14:57:04,122] INFO   190[main](Config.java:94) - Loading configuration properties from resource path /config.properties
[2010-03-19 14:57:04,138]TRACE   206[main](Config.java:123) - Configuration properties:
[2010-03-19 14:57:04,138]TRACE   206[main](Config.java:126) - hello.ws.EndpointAddress http://localhost:8080/hello-ws/endpoint
[2010-03-19 14:57:04,669]TRACE   737[main](Handler.java:43) - getHeaders()
[2010-03-19 14:57:04,669]TRACE   737[main](Handler.java:43) - getHeaders()
[2010-03-19 14:57:04,767]DEBUG   835[main](SayHelloService.java:37) - Invoke web service. Parameter = friend
[2010-03-19 14:57:04,783]TRACE   851[main](Handler.java:48) - handleMessage()
[2010-03-19 14:57:04,783]TRACE   851[main](WebServiceInterceptorManager.java:54) - interceptHandleMessageWebService()
[2010-03-19 14:57:04,784]TRACE   852[main](WebServiceInterceptorManager.java:133) - SOAP message names follow
[2010-03-19 14:57:04,784]TRACE   852[main](WebServiceInterceptorManager.java:134) - javax.xml.ws.wsdl.service: '{urn:hello:wsdl}HelloService'
[2010-03-19 14:57:04,784]TRACE   852[main](WebServiceInterceptorManager.java:135) - javax.xml.ws.wsdl.port: '{urn:hello:wsdl}HelloPort'
[2010-03-19 14:57:04,784]TRACE   852[main](WebServiceInterceptorManager.java:162) - Web Service config path source items
[2010-03-19 14:57:04,786]TRACE   854[main](WebServiceInterceptorManager.java:163) - namespace: 'urn:hello:wsdl'
[2010-03-19 14:57:04,786]TRACE   854[main](WebServiceInterceptorManager.java:164) - service: 'HelloService'
[2010-03-19 14:57:04,786]TRACE   854[main](WebServiceInterceptorManager.java:165) - port: 'HelloPort'
[2010-03-19 14:57:04,786]TRACE   854[main](WebServiceInterceptorManager.java:221) - Extracted config path: '{urn:hello:wsdl}HelloService.HelloPort'
[2010-03-19 14:57:04,787]TRACE   855[main](WebServiceInterceptorManager.java:227) - Using configuration tree: Web Service interception
[2010-03-19 14:57:04,787]TRACE   855[main](WebServiceInterceptorManager.java:243) - Web Service interception config data: [InterceptConfigData: extensionList={[Extension: id=trace, enabled=true, listener=step.extension.trace.TraceExtensionListener, web-service-interceptor=step.extension.trace.TraceWebServiceInterceptor], [Extension: id=cipher, enabled=false], [Extension: id=errors, enabled=true, listener=step.extension.errors.ErrorsExtensionListener, web-service-interceptor=step.extension.errors.ErrorsWebServiceInterceptor], [Extension: id=trace, enabled=true, listener=step.extension.trace.TraceExtensionListener, web-service-interceptor=step.extension.trace.TraceWebServiceInterceptor]} ]
[2010-03-19 14:57:04,788]TRACE   856[main](WebServiceInterceptorManager.java:133) - SOAP message names follow
[2010-03-19 14:57:04,788]TRACE   856[main](WebServiceInterceptorManager.java:134) - javax.xml.ws.wsdl.service: '{urn:hello:wsdl}HelloService'
[2010-03-19 14:57:04,788]TRACE   856[main](WebServiceInterceptorManager.java:135) - javax.xml.ws.wsdl.port: '{urn:hello:wsdl}HelloPort'
[2010-03-19 14:57:04,788]TRACE   856[main](WebServiceInterceptorManager.java:162) - Web Service config path source items
[2010-03-19 14:57:04,789]TRACE   857[main](WebServiceInterceptorManager.java:163) - namespace: 'urn:hello:wsdl'
[2010-03-19 14:57:04,791]TRACE   859[main](WebServiceInterceptorManager.java:164) - service: 'HelloService'
[2010-03-19 14:57:04,792]TRACE   860[main](WebServiceInterceptorManager.java:165) - port: 'HelloPort'
[2010-03-19 14:57:04,792]DEBUG   860[main](WebServiceInterceptorManager.java:255) - Intercepting web service {urn:hello:wsdl}HelloService.HelloPort
[2010-03-19 14:57:04,823]DEBUG   891[main](WebServiceInterceptorManager.java:284) - SOAP Message situation: client-side, outbound, non-fault
[2010-03-19 14:57:04,824]DEBUG   892[main](WebServiceInterceptorManager.java:321) - Invoking trace extension
[2010-03-19 14:57:04,824]TRACE   892[main](WebServiceInterceptorManager.java:324) - create web service interceptor instance
[2010-03-19 14:57:04,824]TRACE   892[main](Extension.java:496) - create web service interceptor instance
[2010-03-19 14:57:04,824]TRACE   892[main](WebServiceInterceptorManager.java:327) - create web service interceptor parameter instance
[2010-03-19 14:57:04,826]TRACE   894[main](WebServiceInterceptorManager.java:330) - call web service interceptor
[2010-03-19 14:57:04,839]TRACE   907[main](WebServiceInterceptorManager.java:333) - interceptor return value: 'true'
[2010-03-19 14:57:04,839]DEBUG   907[main](WebServiceInterceptorManager.java:311) - Skipping cipher extension because it's disabled
[2010-03-19 14:57:04,839]DEBUG   907[main](WebServiceInterceptorManager.java:321) - Invoking errors extension
[2010-03-19 14:57:04,841]TRACE   909[main](WebServiceInterceptorManager.java:324) - create web service interceptor instance
[2010-03-19 14:57:04,841]TRACE   909[main](Extension.java:496) - create web service interceptor instance
[2010-03-19 14:57:04,841]TRACE   909[main](WebServiceInterceptorManager.java:327) - create web service interceptor parameter instance
[2010-03-19 14:57:04,841]TRACE   909[main](WebServiceInterceptorManager.java:330) - call web service interceptor
[2010-03-19 14:57:04,841]TRACE   909[main](WebServiceInterceptorManager.java:333) - interceptor return value: 'true'
[2010-03-19 14:57:04,842]DEBUG   910[main](WebServiceInterceptorManager.java:321) - Invoking trace extension
[2010-03-19 14:57:04,842]TRACE   910[main](WebServiceInterceptorManager.java:324) - create web service interceptor instance
[2010-03-19 14:57:04,843]TRACE   911[main](Extension.java:496) - create web service interceptor instance
[2010-03-19 14:57:04,843]TRACE   911[main](WebServiceInterceptorManager.java:327) - create web service interceptor parameter instance
[2010-03-19 14:57:04,843]TRACE   911[main](WebServiceInterceptorManager.java:330) - call web service interceptor
[2010-03-19 14:57:04,843]TRACE   911[main](WebServiceInterceptorManager.java:333) - interceptor return value: 'true'
[2010-03-19 14:57:04,844]TRACE   912[main](WebServiceInterceptorManager.java:436) - returning 'true' from intercept message
[2010-03-19 14:57:04,844]TRACE   912[main](WebServiceInterceptorManager.java:64) - finally exiting interceptHandleMessageWebService()
[2010-03-19 14:57:05,118]TRACE  1186[main](Handler.java:53) - handleFault()
[2010-03-19 14:57:05,118]TRACE  1186[main](WebServiceInterceptorManager.java:73) - interceptHandleFaultWebService()
[2010-03-19 14:57:05,119]TRACE  1187[main](WebServiceInterceptorManager.java:133) - SOAP message names follow
[2010-03-19 14:57:05,119]TRACE  1187[main](WebServiceInterceptorManager.java:134) - javax.xml.ws.wsdl.service: '{urn:hello:wsdl}HelloService'
[2010-03-19 14:57:05,119]TRACE  1187[main](WebServiceInterceptorManager.java:135) - javax.xml.ws.wsdl.port: '{urn:hello:wsdl}HelloPort'
[2010-03-19 14:57:05,119]TRACE  1187[main](WebServiceInterceptorManager.java:162) - Web Service config path source items
[2010-03-19 14:57:05,119]TRACE  1187[main](WebServiceInterceptorManager.java:163) - namespace: 'urn:hello:wsdl'
[2010-03-19 14:57:05,119]TRACE  1187[main](WebServiceInterceptorManager.java:164) - service: 'HelloService'
[2010-03-19 14:57:05,119]TRACE  1187[main](WebServiceInterceptorManager.java:165) - port: 'HelloPort'
[2010-03-19 14:57:05,121]TRACE  1189[main](WebServiceInterceptorManager.java:221) - Extracted config path: '{urn:hello:wsdl}HelloService.HelloPort'
[2010-03-19 14:57:05,122]TRACE  1190[main](WebServiceInterceptorManager.java:227) - Using configuration tree: Web Service interception
[2010-03-19 14:57:05,122]TRACE  1190[main](WebServiceInterceptorManager.java:243) - Web Service interception config data: [InterceptConfigData: extensionList={[Extension: id=trace, enabled=true, listener=step.extension.trace.TraceExtensionListener, web-service-interceptor=step.extension.trace.TraceWebServiceInterceptor], [Extension: id=cipher, enabled=false], [Extension: id=errors, enabled=true, listener=step.extension.errors.ErrorsExtensionListener, web-service-interceptor=step.extension.errors.ErrorsWebServiceInterceptor], [Extension: id=trace, enabled=true, listener=step.extension.trace.TraceExtensionListener, web-service-interceptor=step.extension.trace.TraceWebServiceInterceptor]} ]
[2010-03-19 14:57:05,123]TRACE  1191[main](WebServiceInterceptorManager.java:133) - SOAP message names follow
[2010-03-19 14:57:05,123]TRACE  1191[main](WebServiceInterceptorManager.java:134) - javax.xml.ws.wsdl.service: '{urn:hello:wsdl}HelloService'
[2010-03-19 14:57:05,123]TRACE  1191[main](WebServiceInterceptorManager.java:135) - javax.xml.ws.wsdl.port: '{urn:hello:wsdl}HelloPort'
[2010-03-19 14:57:05,124]TRACE  1192[main](WebServiceInterceptorManager.java:162) - Web Service config path source items
[2010-03-19 14:57:05,124]TRACE  1192[main](WebServiceInterceptorManager.java:163) - namespace: 'urn:hello:wsdl'
[2010-03-19 14:57:05,124]TRACE  1192[main](WebServiceInterceptorManager.java:164) - service: 'HelloService'
[2010-03-19 14:57:05,124]TRACE  1192[main](WebServiceInterceptorManager.java:165) - port: 'HelloPort'
[2010-03-19 14:57:05,124]DEBUG  1192[main](WebServiceInterceptorManager.java:255) - Intercepting web service {urn:hello:wsdl}HelloService.HelloPort
[2010-03-19 14:57:05,128]DEBUG  1196[main](WebServiceInterceptorManager.java:284) - SOAP Message situation: client-side, inbound, fault
[2010-03-19 14:57:05,128]DEBUG  1196[main](WebServiceInterceptorManager.java:321) - Invoking trace extension
[2010-03-19 14:57:05,128]TRACE  1196[main](WebServiceInterceptorManager.java:324) - create web service interceptor instance
[2010-03-19 14:57:05,128]TRACE  1196[main](Extension.java:496) - create web service interceptor instance
[2010-03-19 14:57:05,128]TRACE  1196[main](WebServiceInterceptorManager.java:327) - create web service interceptor parameter instance
[2010-03-19 14:57:05,129]TRACE  1197[main](WebServiceInterceptorManager.java:330) - call web service interceptor
[2010-03-19 14:57:05,129]TRACE  1197[main](WebServiceInterceptorManager.java:333) - interceptor return value: 'true'
[2010-03-19 14:57:05,131]DEBUG  1199[main](WebServiceInterceptorManager.java:321) - Invoking errors extension
[2010-03-19 14:57:05,131]TRACE  1199[main](WebServiceInterceptorManager.java:324) - create web service interceptor instance
[2010-03-19 14:57:05,131]TRACE  1199[main](Extension.java:496) - create web service interceptor instance
[2010-03-19 14:57:05,131]TRACE  1199[main](WebServiceInterceptorManager.java:327) - create web service interceptor parameter instance
[2010-03-19 14:57:05,132]TRACE  1200[main](WebServiceInterceptorManager.java:330) - call web service interceptor
[2010-03-19 14:57:05,132]TRACE  1200[main](WebServiceInterceptorManager.java:333) - interceptor return value: 'true'
[2010-03-19 14:57:05,132]DEBUG  1200[main](WebServiceInterceptorManager.java:311) - Skipping cipher extension because it's disabled
[2010-03-19 14:57:05,132]DEBUG  1200[main](WebServiceInterceptorManager.java:321) - Invoking trace extension
[2010-03-19 14:57:05,134]TRACE  1202[main](WebServiceInterceptorManager.java:324) - create web service interceptor instance
[2010-03-19 14:57:05,134]TRACE  1202[main](Extension.java:496) - create web service interceptor instance
[2010-03-19 14:57:05,134]TRACE  1202[main](WebServiceInterceptorManager.java:327) - create web service interceptor parameter instance
[2010-03-19 14:57:05,134]TRACE  1202[main](WebServiceInterceptorManager.java:330) - call web service interceptor
[2010-03-19 14:57:05,136]TRACE  1204[main](WebServiceInterceptorManager.java:333) - interceptor return value: 'true'
[2010-03-19 14:57:05,136]TRACE  1204[main](WebServiceInterceptorManager.java:436) - returning 'true' from intercept message
[2010-03-19 14:57:05,136]TRACE  1204[main](WebServiceInterceptorManager.java:83) - finally exiting interceptHandleFaultWebService()
[2010-03-19 14:57:05,137]TRACE  1205[main](Handler.java:58) - close()
[2010-03-19 14:57:05,137]TRACE  1205[main](WebServiceInterceptorManager.java:92) - interceptCloseWebServiceHandler()
[2010-03-19 14:57:05,137]TRACE  1205[main](WebServiceInterceptorManager.java:97) - finally exiting interceptCloseWebServiceHandler()
[2010-03-19 14:57:05,188]TRACE  1256[main](SayHelloService.java:44) - Caught class hello.wsdl.ServiceError_Exception
[2010-03-19 14:57:05,189]ERROR  1257[main](SayHelloService.java:46) - hello.wsdl.ServiceError_Exception: Name is missing (forced by hello.ws.ThrowServiceError property for testing)
[2010-03-19 14:57:05,189]TRACE  1257[main](SayHelloService.java:47) - Throw RemoteServiceException with nested exception
[2010-03-19 14:57:05,189]TRACE  1257[main](SayHelloService.java:65) - Finally exiting SayHelloService action
[2010-03-19 14:57:05,189]TRACE  1257[main](SayHelloAction.java:46) - sayHello caught exception
[2010-03-19 14:57:05,189]ERROR  1257[main](SayHelloAction.java:47) - step.framework.exception.RemoteServiceException: hello.wsdl.ServiceError_Exception: Name is missing (forced by hello.ws.ThrowServiceError property for testing)
[2010-03-19 14:57:05,193]TRACE  1261[main](SayHelloAction.java:67) - Action message: hello.wsdl.ServiceError_Exception: Name is missing (forced by hello.ws.ThrowServiceError property for testing)
[2010-03-19 14:57:05,193]TRACE  1261[main](SayHelloAction.java:75) - Finally exiting main
