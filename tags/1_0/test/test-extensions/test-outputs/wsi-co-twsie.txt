Running the calc.CalcServiceClient program...
begin
Web Service endpoint URL: http://localhost:8080/CalcWS/endpoint
sum 10 2
Using factory stub creation with custom-URL...
[TRACE] Handler - getHeaders()
Message context: (scope,key,value)
(handler,javax.xml.ws.wsdl.operation,{http://calc}sum)
(handler,javax.xml.ws.service.endpoint.address,http://localhost:8080/CalcWS/endpoint)
(handler,javax.xml.ws.wsdl.service,{http://calc}CalcService)
(handler,javax.xml.ws.wsdl.port,{http://calc}CalcPort)
(handler,com.sun.xml.ws.client.handle,com.sun.xml.ws.client.EndpointIFInvocationHandler@6210fb)
(handler,com.sun.xml.ws.client.ContentNegotiation,none)
(handler,javax.xml.ws.handler.message.outbound,true)
Outbound SOAP message:
<?xml version="1.0" ?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://calc"><soapenv:Body><ns1:sum><ns1:a>10</ns1:a><ns1:b>2</ns1:b></ns1:sum></soapenv:Body></soapenv:Envelope>
[TRACE] Handler - handleMessage()
[TRACE] WebServiceInterceptorManager - interceptHandleMessageWebService()
[TRACE] ExtensionEngine - Attempting automatic extension engine initialization
[TRACE] ExtensionEngine - entering init
[DEBUG] ExtensionEngine - load extension engine configuration from /extensions.properties
[TRACE] ExtensionEngine - entering loadConfig
[TRACE] ExtensionEngine - load extensions properties
[TRACE] ExtensionEngine - /extensions.properties
[TRACE] ExtensionEngine - extensions config properties (key: 'value')
[TRACE] ExtensionEngine - extensions.enabled: 'true'
[TRACE] ExtensionEngine - extensions.intercept.service[]: ''
[TRACE] ExtensionEngine - extensions.intercept.web-service[]: 'alpha,exception-thrower,charlie'
[TRACE] ExtensionEngine - extensions.list: 'alpha,bravo,exception-thrower,charlie'
[DEBUG] ExtensionEngine - load configuration for each extension
[TRACE] Extension - entering loadConfig
[TRACE] Extension - load alpha extension properties from /extension-alpha.properties
[TRACE] Extension - extension alpha config properties (key: 'value')
[TRACE] Extension - extension.web-service-interceptor: 'extension.hello.HelloWebServiceInterceptor'
[TRACE] Extension - extension.service-interceptor: 'extension.hello.HelloServiceInterceptor'
[TRACE] Extension - greeting: 'Alpha'
[TRACE] Extension - extension.listener: 'extension.hello.HelloExtensionListener'
[TRACE] Extension - extension.enabled: 'true'
[TRACE] Extension - remove extension alpha properties and keep the remaining ones as additional configuration
[TRACE] Extension - finally exiting loadConfig
[TRACE] Extension - entering loadConfig
[TRACE] Extension - load bravo extension properties from /extension-bravo.properties
[TRACE] Extension - extension bravo config properties (key: 'value')
[TRACE] Extension - extension.web-service-interceptor: 'extension.hello.HelloWebServiceInterceptor'
[TRACE] Extension - extension.service-interceptor: 'extension.hello.HelloServiceInterceptor'
[TRACE] Extension - greeting: 'Bravo'
[TRACE] Extension - extension.listener: 'extension.hello.HelloExtensionListener'
[TRACE] Extension - extension.enabled: 'true'
[TRACE] Extension - remove extension bravo properties and keep the remaining ones as additional configuration
[TRACE] Extension - finally exiting loadConfig
[TRACE] Extension - entering loadConfig
[TRACE] Extension - load exception-thrower extension properties from /extension-exception-thrower.properties
[TRACE] Extension - extension exception-thrower config properties (key: 'value')
[TRACE] Extension - extension.web-service-interceptor: 'extension.exception.ThrowExceptionWebServiceInterceptor'
[TRACE] Extension - extension.enabled: 'true'
[TRACE] Extension - extension.listener: 'extension.exception.ThrowExceptionExtensionListener'
[TRACE] Extension - listener.initialized.throw: ''
[TRACE] Extension - web-service-interceptor.throw: 'framework.extensions.WebServiceInterceptorException'
[TRACE] Extension - listener.destroyed.throw: ''
[TRACE] Extension - service-interceptor.before.throw: ''
[TRACE] Extension - service-interceptor.after.throw: ''
[TRACE] Extension - web-service-interceptor.throw.situation: 'client-outbound'
[TRACE] Extension - extension.service-interceptor: 'extension.exception.ThrowExceptionServiceInterceptor'
[TRACE] Extension - remove extension exception-thrower properties and keep the remaining ones as additional configuration
[TRACE] Extension - finally exiting loadConfig
[TRACE] Extension - entering loadConfig
[TRACE] Extension - load charlie extension properties from /extension-charlie.properties
[TRACE] Extension - extension charlie config properties (key: 'value')
[TRACE] Extension - extension.web-service-interceptor: 'extension.hello.HelloWebServiceInterceptor'
[TRACE] Extension - extension.service-interceptor: 'extension.hello.HelloServiceInterceptor'
[TRACE] Extension - greeting: 'Charlie'
[TRACE] Extension - extension.listener: 'extension.hello.HelloExtensionListener'
[TRACE] Extension - extension.enabled: 'true'
[TRACE] Extension - remove extension charlie properties and keep the remaining ones as additional configuration
[TRACE] Extension - finally exiting loadConfig
[TRACE] ExtensionEngine - load intercept configs
[TRACE] ExtensionEngine - ignoring empty extensions.intercept.service[]
[TRACE] ExtensionEngine - Intercept configuration trees:
[TRACE] ExtensionEngine - Configuration tree Service interception
root [ConfigNode: config=null, #childNodes=0]

[TRACE] ExtensionEngine - Configuration tree Web Service interception
root [ConfigNode: config=[InterceptConfigData: extensionList={[Extension: id=alpha, enabled=true], [Extension: id=exception-thrower, enabled=true], [Extension: id=charlie, enabled=true]} ], #childNodes=0]

[TRACE] ExtensionEngine - remove extensions properties and keep the remaining ones as additional configuration
[TRACE] ExtensionEngine - finally exiting loadConfig
[DEBUG] ExtensionEngine - extension engine configuration loaded successfully
[DEBUG] ExtensionEngine - start extensions
[TRACE] Extension - entering start
[TRACE] Extension - load service interceptor class
[TRACE] Extension - create service interceptor instance
[TRACE] Extension - load web service interceptor class
[TRACE] Extension - create web service interceptor instance
[TRACE] Extension - load listener class
[TRACE] Extension - create listener instance
[TRACE] Extension - invoke listener on EXTENSION_INITIALIZED
Using custom greeting: Alpha
Alpha from HelloExtensionListener.extensionInitialized
[INFO] Extension - Extension alpha enabled
Using custom greeting: Bravo
[TRACE] Extension - finally exiting start
Bravo from HelloExtensionListener.extensionInitialized
[TRACE] Extension - entering start
[TRACE] Extension - load service interceptor class
[TRACE] Extension - create service interceptor instance
[TRACE] Extension - load web service interceptor class
[TRACE] Extension - create web service interceptor instance
[TRACE] Extension - load listener class
[TRACE] Extension - create listener instance
[TRACE] Extension - invoke listener on EXTENSION_INITIALIZED
[INFO] Extension - Extension bravo enabled
[TRACE] Extension - finally exiting start
[TRACE] Extension - entering start
[TRACE] Extension - load service interceptor class
[TRACE] Extension - create service interceptor instance
[TRACE] Extension - load web service interceptor class
[TRACE] Extension - create web service interceptor instance
[TRACE] Extension - load listener class
[TRACE] Extension - create listener instance
[TRACE] Extension - invoke listener on EXTENSION_INITIALIZED
[INFO] Extension - Extension exception-thrower enabled
[TRACE] Extension - finally exiting start
[TRACE] Extension - entering start
[TRACE] Extension - load service interceptor class
[TRACE] Extension - create service interceptor instance
[TRACE] Extension - load web service interceptor class
[TRACE] Extension - create web service interceptor instance
[TRACE] Extension - load listener class
[TRACE] Extension - create listener instance
[TRACE] Extension - invoke listener on EXTENSION_INITIALIZED
[INFO] Extension - Extension charlie enabled
[TRACE] Extension - finally exiting start
Using custom greeting: Charlie
Charlie from HelloExtensionListener.extensionInitialized
[DEBUG] ExtensionEngine - extensions started successfully
[INFO] ExtensionEngine - Extension engine enabled
[TRACE] ExtensionEngine - set init flag
[TRACE] ExtensionEngine - finally exiting init
[TRACE] ExtensionEngine - Automatic extension engine initialization successful!
[TRACE] WebServiceInterceptorManager - SOAP message names follow
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.service: '{http://calc}CalcService'
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
[TRACE] WebServiceInterceptorManager - Web Service config path source items
[TRACE] WebServiceInterceptorManager - namespace: 'http://calc'
[TRACE] WebServiceInterceptorManager - service: 'CalcService'
[TRACE] WebServiceInterceptorManager - port: 'CalcPort'
[TRACE] WebServiceInterceptorManager - Extracted config path: '{http://calc}CalcService.CalcPort'
[TRACE] WebServiceInterceptorManager - Using configuration tree: Web Service interception
[TRACE] WebServiceInterceptorManager - Web Service interception config data: [InterceptConfigData: extensionList={[Extension: id=alpha, enabled=true, listener=extension.hello.HelloExtensionListener, service-interceptor=extension.hello.HelloServiceInterceptor, web-service-interceptor=extension.hello.HelloWebServiceInterceptor], [Extension: id=exception-thrower, enabled=true, listener=extension.exception.ThrowExceptionExtensionListener, service-interceptor=extension.exception.ThrowExceptionServiceInterceptor, web-service-interceptor=extension.exception.ThrowExceptionWebServiceInterceptor], [Extension: id=charlie, enabled=true, listener=extension.hello.HelloExtensionListener, service-interceptor=extension.hello.HelloServiceInterceptor, web-service-interceptor=extension.hello.HelloWebServiceInterceptor]} ]
[TRACE] WebServiceInterceptorManager - SOAP message names follow
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.service: '{http://calc}CalcService'
[TRACE] WebServiceInterceptorManager - javax.xml.ws.wsdl.port: '{http://calc}CalcPort'
[TRACE] WebServiceInterceptorManager - Web Service config path source items
[TRACE] WebServiceInterceptorManager - namespace: 'http://calc'
[TRACE] WebServiceInterceptorManager - service: 'CalcService'
[TRACE] WebServiceInterceptorManager - port: 'CalcPort'
[DEBUG] WebServiceInterceptorManager - Intercepting web service {http://calc}CalcService.CalcPort
[DEBUG] WebServiceInterceptorManager - SOAP Message situation: client-side, outbound, non-fault
[DEBUG] WebServiceInterceptorManager - Invoking alpha extension
[TRACE] WebServiceInterceptorManager - create web service interceptor instance
[TRACE] Extension - create web service interceptor instance
[TRACE] WebServiceInterceptorManager - create web service interceptor parameter instance
[TRACE] WebServiceInterceptorManager - call web service interceptor
[TRACE] WebServiceInterceptorManager - interceptor return value: 'true'
[DEBUG] WebServiceInterceptorManager - Invoking exception-thrower extension
[TRACE] WebServiceInterceptorManager - create web service interceptor instance
[TRACE] Extension - create web service interceptor instance
[TRACE] WebServiceInterceptorManager - create web service interceptor parameter instance
[TRACE] WebServiceInterceptorManager - call web service interceptor
Alpha from HelloWebServiceInterceptor.interceptMessage SOAP message situation: client-side, outbound
returnPropertyValue null
ThrowExceptionExtensionUtil> throwing an instance of framework.extensions.WebServiceInterceptorException in method client-outbound
[DEBUG] WebServiceInterceptorManager - web service interceptor has thrown a web service interceptor exception
[DEBUG] WebServiceInterceptorManager - framework.extensions.WebServiceInterceptorException: ThrowExceptionExtensionUtil generated exception in method client-outbound
[TRACE] WebServiceInterceptorManager - web service interceptor exception details <framework.extensions.WebServiceInterceptorException: ThrowExceptionExtensionUtil generated exception in method client-outbound>framework.extensions.WebServiceInterceptorException: ThrowExceptionExtensionUtil generated exception in method client-outbound
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:494)
	at extension.exception.ThrowExceptionExtensionUtil.throwException(ThrowExceptionExtensionUtil.java:25)
	at extension.exception.ThrowExceptionWebServiceInterceptor.interceptMessage(ThrowExceptionWebServiceInterceptor.java:95)
	at framework.extensions.WebServiceInterceptorManager.interceptMessage(WebServiceInterceptorManager.java:331)
	at framework.extensions.WebServiceInterceptorManager.interceptHandleMessage(WebServiceInterceptorManager.java:258)
	at framework.extensions.WebServiceInterceptorManager.interceptHandleMessageWebServiceHandler(WebServiceInterceptorManager.java:56)
	at framework.extensions.Handler.handleMessage(Handler.java:49)
	at framework.extensions.Handler.handleMessage(Handler.java:18)
	at com.sun.xml.ws.handler.HandlerChainCaller.callProtocolHandlers(HandlerChainCaller.java:614)
	at com.sun.xml.ws.handler.HandlerChainCaller.internalCallHandlers(HandlerChainCaller.java:429)
	at com.sun.xml.ws.handler.HandlerChainCaller.callHandlers(HandlerChainCaller.java:359)
	at com.sun.xml.ws.protocol.soap.client.SOAPMessageDispatcher.callHandlersOnRequest(SOAPMessageDispatcher.java:651)
	at com.sun.xml.ws.protocol.soap.client.SOAPMessageDispatcher.doSend(SOAPMessageDispatcher.java:201)
	at com.sun.xml.ws.protocol.soap.client.SOAPMessageDispatcher.send(SOAPMessageDispatcher.java:153)
	at com.sun.xml.ws.encoding.soap.internal.DelegateBase.send(DelegateBase.java:85)
	at com.sun.xml.ws.client.EndpointIFInvocationHandler.implementSEIMethod(EndpointIFInvocationHandler.java:176)
	at com.sun.xml.ws.client.EndpointIFInvocationHandler.invoke(EndpointIFInvocationHandler.java:105)
	at $Proxy19.sum(Unknown Source)
	at calc.CalcServiceClient.main(CalcServiceClient.java:137)

[DEBUG] WebServiceInterceptorManager - replacing existing message's body with a SOAP Fault containing the exception's message
[DEBUG] WebServiceInterceptorManager - reversing message direction
[TRACE] WebServiceInterceptorManager - changing SOAP message context outbound property
[TRACE] WebServiceInterceptorManager - advance list iterator to skip current extension
[TRACE] WebServiceInterceptorManager - changing local isOutbound flag
[TRACE] WebServiceInterceptorManager - from now on, the loop can no longer change direction
[DEBUG] WebServiceInterceptorManager - proceed
[DEBUG] WebServiceInterceptorManager - Invoking alpha extension
[TRACE] WebServiceInterceptorManager - create web service interceptor instance
[TRACE] Extension - create web service interceptor instance
[TRACE] WebServiceInterceptorManager - create web service interceptor parameter instance
[TRACE] WebServiceInterceptorManager - call web service interceptor
Alpha from HelloWebServiceInterceptor.interceptMessage SOAP message situation: client-side, inbound, fault
[TRACE] WebServiceInterceptorManager - interceptor return value: 'true'
[TRACE] WebServiceInterceptorManager - SOAP message contains a fault; throwing SOAPFaultException with it
[TRACE] WebServiceInterceptorManager - finally exiting interceptHandleMessageWebService()
Inbound SOAP message:
[TRACE] Handler - close()
[TRACE] WebServiceInterceptorManager - interceptCloseWebServiceHandler()
[TRACE] WebServiceInterceptorManager - finally exiting interceptCloseWebServiceHandler()
<?xml version="1.0" ?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://calc" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soapenv:Body><soapenv:Fault><faultcode>soapenv:Client</faultcode><faultstring>ThrowExceptionExtensionUtil generated exception in method client-outbound</faultstring></soapenv:Fault></soapenv:Body></soapenv:Envelope>
Message context: (scope,key,value)
(handler,javax.xml.ws.wsdl.operation,{http://calc}sum)
(handler,javax.xml.ws.service.endpoint.address,http://localhost:8080/CalcWS/endpoint)
(handler,javax.xml.ws.wsdl.service,{http://calc}CalcService)
(handler,javax.xml.ws.wsdl.port,{http://calc}CalcPort)
(handler,com.sun.xml.ws.client.handle,com.sun.xml.ws.client.EndpointIFInvocationHandler@6210fb)
(handler,com.sun.xml.ws.client.ContentNegotiation,none)
(handler,javax.xml.ws.handler.message.outbound,false)
Caught web service exception:
class javax.xml.ws.soap.SOAPFaultException
ThrowExceptionExtensionUtil generated exception in method client-outbound
end

run:

BUILD SUCCESSFUL
Total time: 7 seconds
