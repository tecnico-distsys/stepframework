<?xml version="1.0" encoding="UTF-8"?>

<definitions name="Calc"
             targetNamespace="http://calc"
             xmlns:tns="http://calc"
             xmlns="http://schemas.xmlsoap.org/wsdl/"
             xmlns:xsd="http://www.w3.org/2001/XMLSchema"
             xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">

    <!-- This file is not generated automatically -->

    <!-- # 1

         A WSDL file is better read from the end of the file upwards,
         so we suggest you read the explanation comments following the
         ordinal numbers #... sequence

         The XML namespaces definitions are very important.
         They state which namespaces are being used and are their prefixes.

         The targetNamespace (prefix tns) is the namespace of the Web Service
         that is being defined by this WSDL document.
    -->

    <!-- #6
         types definitions

         This section has a XML Schema Definition.
         It can be in-line or imported from another file.

         In document-literal style, there must be one XML element definition
         for each declared message.
    -->
	<types>
        <xsd:schema elementFormDefault="qualified"
                    targetNamespace="http://calc">

            <xsd:complexType name="SumType">
                <xsd:sequence>
                    <xsd:element name="a" type="xsd:int" />
                    <xsd:element name="b" type="xsd:int" />
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="sum" type="tns:SumType" />

            <xsd:complexType name="SumResponseType">
                <xsd:sequence>
                    <xsd:element name="return" type="xsd:int" />
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="sumResponse" type="tns:SumResponseType" />

            <xsd:complexType name="SubType">
                <xsd:sequence>
                    <xsd:element name="a" type="xsd:int" />
                    <xsd:element name="b" type="xsd:int" />
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="sub" type="tns:SubType" />

            <xsd:complexType name="SubResponseType">
                <xsd:sequence>
                    <xsd:element name="return" type="xsd:int" />
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="subResponse" type="tns:SubResponseType" />

            <xsd:complexType name="MultType">
                <xsd:sequence>
                    <xsd:element name="a" type="xsd:int" />
                    <xsd:element name="b" type="xsd:int" />
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="mult" type="tns:MultType" />

            <xsd:complexType name="MultResponseType">
                <xsd:sequence>
                    <xsd:element name="return" type="xsd:int" />
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="multResponse" type="tns:MultResponseType" />

            <xsd:complexType name="IntdivType">
                <xsd:sequence>
                    <xsd:element name="a" type="xsd:int" />
                    <xsd:element name="b" type="xsd:int" />
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="intdiv" type="tns:IntdivType" />

            <xsd:complexType name="IntdivResponseType">
                <xsd:sequence>
                    <xsd:element name="return" type="xsd:int" />
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="intdivResponse" type="tns:IntdivResponseType" />

            <xsd:complexType name="DivideByZeroType">
                <xsd:sequence>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="divideByZero" type="tns:DivideByZeroType" />

        </xsd:schema>
	</types>


    <!-- #5
         message definitions

         In document-literal style, each message has a single part
         that refers to a XML element defined in the XML Schema Definition.
    -->
	<message name="sum">
            <part name="parameters" element="tns:sum" />
	</message>
	<message name="sumResponse">
            <part name="result" element="tns:sumResponse" />
	</message>

	<message name="sub">
            <part name="parameters" element="tns:sub" />
	</message>
	<message name="subResponse">
            <part name="result" element="tns:subResponse" />
	</message>

	<message name="mult">
            <part name="parameters" element="tns:mult" />
	</message>
	<message name="multResponse">
            <part name="result" element="tns:multResponse" />
	</message>

	<message name="intdiv">
            <part name="parameters" element="tns:intdiv" />
	</message>
	<message name="intdivResponse">
            <part name="result" element="tns:intdivResponse" />
	</message>
	<message name="DivideByZero">
            <part name="DivideByZero" element="tns:divideByZero" />
	</message>


    <!-- #4
         port type definitions

         A port type is a set of operations. It is similar in concept to a Java interface.

         Each operation has an input message, an output message and, optionally,
         fault messages.

         In this case, only intdiv (integer division) has a fault defined.
    -->
	<portType name="CalcPortType">
        <operation name="sum">
            <input message="tns:sum" name="sum"/>
            <output message="tns:sumResponse" name="sumResponse"/>
        </operation>
        <operation name="sub">
            <input message="tns:sub" name="sub"/>
            <output message="tns:subResponse" name="subResponse"/>
        </operation>
        <operation name="mult">
            <input message="tns:mult" name="mult"/>
            <output message="tns:multResponse" name="multResponse"/>
        </operation>
        <operation name="intdiv">
            <input message="tns:intdiv" name="intdiv"/>
            <output message="tns:intdivResponse" name="intdivResponse"/>
            <fault message="tns:DivideByZero" name="DivideByZero"></fault>
        </operation>
	</portType>


    <!-- #3
         binding definitions

         A binding defines a concrete implementation of an abstract port type.

         It is essentially an annotation of the port type operations with
         the technologies that will be used to actually invoke the service.
         In this case, SOAP and HTTP.

         It also defines the document-literal style of binding,
         meaning that the SOAP body will have single part that is
         a XML document that is defined by a XML Schema Definition.

         In this case, only intdiv (integer division) has a fault defined.
    -->
	<binding name="CalcBinding" type="tns:CalcPortType">
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document" />
        <operation name="sum">
            <soap:operation soapAction="" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
        </operation>
        <operation name="sub">
            <soap:operation soapAction="" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
        </operation>
        <operation name="mult">
            <soap:operation soapAction="" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
        </operation>
        <operation name="intdiv">
            <soap:operation soapAction="" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
            <fault name="DivideByZero">
                <soap:fault use="literal" name="DivideByZero" />
            </fault>
        </operation>
	</binding>


    <!-- #2
         service definition

         A service defines a set of ports (typically just one).
         The port is a concrete implementation of a port type, defined by a binding.

         The SOAP address location is the default endpoint address for the Web Service
    -->
	<service name="CalcService">
        <port name="CalcPort" binding="tns:CalcBinding">
            <soap:address location="REPLACE_WITH_ACTUAL_URL" />
        </port>
	</service>

</definitions>
