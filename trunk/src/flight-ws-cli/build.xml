<project name="flight-ws-cli" default="build" basedir=".">

    <description>Web Service client build file. Customize as required.</description>

    <!-- load environment variables as properties -->
    <property environment="env"/>

    <!-- load properties files -->
    <property file="build.properties"/>
    <property file="../build.properties"/>
    <property file="${user.home}/build.properties"/>

    <!-- properties with default folder locations -->
    <property name="src.rel-dir" value="src"/>
    <property name="web-content.rel-dir" value="WebContent"/>
    <property name="build.rel-dir" value="build"/>
    <property name="dist.rel-dir" value="dist"/>

    <!-- import external definitions -->
    <import file="../tomcat.xml" />
    <import file="../jwsdp.xml" />

    <!-- project classpath -->
    <path id="project.classpath">
        <!-- compiled classes -->
        <pathelement location="${build.rel-dir}" />
        <!-- project libraries -->

        <!-- shared libraries -->
        <fileset dir="../flight-ws/dist">
            <include name="*.jar" />
        </fileset>
        <fileset dir="../lib">
            <include name="*.jar" />
        </fileset>
        <!-- referenced libraries -->
        <path refid="jwsdp.jars.path" />
    </path>


    <!-- basic -->

    <target name="init">
        <mkdir dir="${build.rel-dir}"/>
        <mkdir dir="${dist.rel-dir}"/>
    </target>

    <target name="clean" description="Delete build folder contents" >
        <delete>
            <fileset dir="${build.rel-dir}" includes="**/*" excludes="" />
        </delete>
        <delete>
            <fileset dir="${dist.rel-dir}" includes="**/*" excludes="" />
        </delete>
    </target>


    <!-- compile -->

    <target name="copy-resources" depends="init" description="Copies resource files to compilation folder">
        <copy todir="${build.rel-dir}" overwrite="true">
            <fileset dir="${src.rel-dir}" includes="**/*.properties,**/*.xml" excludes="" />
        </copy>
    </target>

    <target name="compile" depends="init,copy-resources" description="Compiles the source code" >
        <javac srcdir="${src.rel-dir}"
               destdir="${build.rel-dir}"
               debug="true"
               debuglevel="lines,vars,source"
               optimize="true"
               deprecation="true"
               source="1.5"
               target="1.5"
               verbose="false" >
            <compilerarg line="" /> <!-- "-Xlint:all", "-Xlint:all,-path", "-Xlint:all,-path,-unchecked" -->
            <classpath refid="project.classpath" />
        </javac>
    </target>


    <!-- console -->

    <property name="run.main-class" value="step.example.flight.ws.client.ConsoleClient"/>
    <property name="run.args" value=""/>

    <target name="run" depends="compile" description="Runs the program" >
        <java classname="${run.main-class}" fork="true">
    	    <arg line="${run.args}" />
            <classpath>
                <path refid="project.classpath" />
            </classpath>
        </java>
    </target>


    <!-- library -->

    <property name="jar.rel-file" value="${dist.rel-dir}/${ant.project.name}.jar" />

    <target name="create-jar" description="Creates a jar file"
            depends="init,compile">
        <jar destfile="${jar.rel-file}">
            <!-- compiled classes and resources -->
            <zipfileset dir="${build.rel-dir}"
                        includes="**/*.class,**/*.properties,**/*.xml"
                        excludes="config.properties" /><!-- this file is used only for testing -->
            <!-- exception classes -->
            <zipfileset dir="${build.rel-dir}"
                        includes="**/*.class,**/*.properties,**/*.xml"
                        excludes="config.properties" /><!-- this file is used only for testing -->

        </jar>
    </target>


    <!-- jax-ws-client -->

    <property name="wsdl.rel-file" value="../flight-ws/${web-content.rel-dir}/WEB-INF/wsdl/flight.wsdl" />

    <target name="-generate-file-url-prefix">
        <!-- file url syntax is:  file://host/path ; assuming host is empty, the prefix is different for windows and unix systems -->
        <condition property="file-url-prefix" value="file:///">
            <os family="windows" />
        </condition>
        <condition property="file-url-prefix" value="file://">
            <not><os family="windows" /></not> <!-- ~ unix -->
        </condition>
    </target>

    <target name="-generate-wsdl-url" depends="-generate-file-url-prefix">
        <property name="wsdl.file" location="${wsdl.rel-file}" />
        <path id="wsdl.path">
            <pathelement location="${wsdl.file}"/>
        </path>
        <pathconvert property="wsdl.file./" refid="wsdl.path" pathsep=";" dirsep="/" />
        <property name="wsdl.url" value="${file-url-prefix}${wsdl.file./}" />
        <echo message="${wsdl.url}" />
    </target>

    <target name="generate-java-from-wsdl" description="Generate Web Service client-side Java code from WSDL"
            depends="init,-generate-wsdl-url">
        <echo message="Executing wsimport to generate client-side code..." />
        <echo message="WSDL: ${wsdl.rel-file}" />
        <echo message="Generated code destination dir: ${src.rel-dir}" />
        <wsimport wsdl="${wsdl.url}"
                  debug="true"
                  verbose="false"
                  destdir="${src.rel-dir}"
                  sourcedestdir="${src.rel-dir}" >
            <binding dir="${src.rel-dir}" includes="*binding*.xml"/>
        </wsimport>
        <!-- delete generated class files, leaving handlers xml -->
        <delete>
            <fileset dir="${src.rel-dir}" includes="**/*.class"/>
        </delete>
    </target>


    <!-- build -->
    <target name="build" description="Build the project"
            depends="create-jar" >
    </target>

</project>
