<?xml version="1.0" encoding="UTF-8"?>

<project name="extensions" default="build" basedir=".">

    <description>STEP Extensions build file. Customize as required.</description>


    <!-- load environment variables as properties -->
    <property environment="env"/>

    <!-- load properties files -->
    <property file="build.properties"/>
    <property file="../build.properties"/>
    <property file="${user.home}/build.properties"/>

    <!-- properties with default folder locations -->
    <property name="src.rel-dir" value="src"/>
    <property name="build.rel-dir" value="bin"/>
    <property name="dist.rel-dir" value="dist"/>


    <!-- project classpath -->

    <path id="project.classpath">
        <!-- compiled classes -->
        <pathelement location="${build.rel-dir}" />
        <!-- non-sharable framework dependencies -->
        <fileset dir="../../lib" includes="**/application-specific/*.jar" excludes="**/gwt-servlet.jar"/>
        <!-- sharable dependencies -->
        <fileset dir="${env.STEP_HOME}/lib" includes="*.jar" />
        <!-- framework library -->
        <fileset dir="../framework/dist" includes="*.jar" />
    </path>


    <!-- basic -->

    <target name="init">
        <mkdir dir="${build.rel-dir}"/>
        <mkdir dir="${dist.rel-dir}"/>
    </target>

    <target name="clean"
        description="Delete temporary folders">
        <delete dir="${build.rel-dir}" failonerror="false" deleteonexit="true" />
        <delete dir="${dist.rel-dir}" failonerror="false" deleteonexit="true" />
    </target>


    <!-- compile -->

    <target name="prepare-resources" depends="init">
    <!-- description="Prepare application resource files" -->
        <copy todir="${build.rel-dir}" overwrite="true">
            <fileset dir="${src.rel-dir}" includes="**/*.properties,**/*.xml" excludes="" />
        </copy>
        <replace dir="${build.rel-dir}" includes="**/*.properties,**/*.xml" excludes="" summary="true">
            <replacefilter token="@example-token@" value="${example-property}" />
        </replace>
    </target>

    <target name="compile" depends="prepare-resources">
    <!-- description="Compile source code" -->
        <javac
            srcdir="${src.rel-dir}"
            destdir="${build.rel-dir}"
            debug="true"
            debuglevel="lines,vars,source"
            optimize="true"
            deprecation="true"
            verbose="false"
        >
            <compilerarg line="" /> <!-- "-Xlint:all", "-Xlint:all,-path", "-Xlint:all,-path,-unchecked" -->
            <classpath refid="project.classpath" />
        </javac>
    </target>


    <!-- library -->

    <property name="jar.name" value="${ant.project.name}.jar" />

    <target name="create-jar" depends="compile">
    <!-- description="Create a jar file" -->
        <jar destfile="${dist.rel-dir}/${jar.name}">
            <!-- compiled classes and resources -->
            <zipfileset dir="${build.rel-dir}"
                        includes="**/*.class"
                        excludes="" />
        </jar>
    </target>


    <!-- build -->

    <target name="build" depends="create-jar"
        description="Build the program">
    </target>

    <target name="rebuild" depends="clean,build">
    <!-- description="Rebuild the project" -->
    </target>

   <target name="dist-to-dir" depends="create-jar">
    <!-- description="update extension library in the examples" -->
        <fail message="MUST DEFINE to.dir" unless="to.dir" />
        <copy todir="${to.dir}/war/WEB-INF/lib" overwrite="true">
            <fileset file="${dist.rel-dir}/${jar.name}"/>
        </copy>
    </target>  

    <target name="dist-clean">
    <!-- description="Clean library usage in the examples" -->
        <fail message="MUST DEFINE from.dir" unless="from.dir" />
        <delete includeemptydirs="true" deleteonexit="true" failonerror="false">
             <fileset dir="${from.dir}/war/WEB-INF/lib" includes="${jar.name}"/>
        </delete>
    </target>

</project>
